
002Sizeof.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001244  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000160  080013e4  080013e4  000113e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001544  08001544  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001544  08001544  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001544  08001544  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001544  08001544  00011544  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001548  08001548  00011548  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  0800154c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  20000064  080015b0  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  080015b0  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002363  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000005f4  00000000  00000000  000223f7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000118  00000000  00000000  000229f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000e0  00000000  00000000  00022b08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002c02  00000000  00000000  00022be8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001321  00000000  00000000  000257ea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000972b  00000000  00000000  00026b0b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00030236  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b40  00000000  00000000  0003028c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080013cc 	.word	0x080013cc

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	080013cc 	.word	0x080013cc

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0
    /* Loop forever */
	printf("Size of character data type is %u\n", sizeof(char));
 8000284:	2101      	movs	r1, #1
 8000286:	480c      	ldr	r0, [pc, #48]	; (80002b8 <main+0x38>)
 8000288:	f000 f94a 	bl	8000520 <iprintf>
	printf("Size of short data type is %u\n", sizeof(short));
 800028c:	2102      	movs	r1, #2
 800028e:	480b      	ldr	r0, [pc, #44]	; (80002bc <main+0x3c>)
 8000290:	f000 f946 	bl	8000520 <iprintf>
	printf("Size of int data type is %u\n", sizeof(int));
 8000294:	2104      	movs	r1, #4
 8000296:	480a      	ldr	r0, [pc, #40]	; (80002c0 <main+0x40>)
 8000298:	f000 f942 	bl	8000520 <iprintf>
	printf("Size of long data type is %u\n", sizeof(long));
 800029c:	2104      	movs	r1, #4
 800029e:	4809      	ldr	r0, [pc, #36]	; (80002c4 <main+0x44>)
 80002a0:	f000 f93e 	bl	8000520 <iprintf>
	printf("Size of long long data type is %u\n", sizeof(long long));
 80002a4:	2108      	movs	r1, #8
 80002a6:	4808      	ldr	r0, [pc, #32]	; (80002c8 <main+0x48>)
 80002a8:	f000 f93a 	bl	8000520 <iprintf>
	printf("Size of double data type is %u\n", sizeof(double));
 80002ac:	2108      	movs	r1, #8
 80002ae:	4807      	ldr	r0, [pc, #28]	; (80002cc <main+0x4c>)
 80002b0:	f000 f936 	bl	8000520 <iprintf>
	for(;;);
 80002b4:	e7fe      	b.n	80002b4 <main+0x34>
 80002b6:	bf00      	nop
 80002b8:	080013e4 	.word	0x080013e4
 80002bc:	08001408 	.word	0x08001408
 80002c0:	08001428 	.word	0x08001428
 80002c4:	08001448 	.word	0x08001448
 80002c8:	08001468 	.word	0x08001468
 80002cc:	0800148c 	.word	0x0800148c

080002d0 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80002d0:	b480      	push	{r7}
 80002d2:	b083      	sub	sp, #12
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	4603      	mov	r3, r0
 80002d8:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80002da:	4b0f      	ldr	r3, [pc, #60]	; (8000318 <ITM_SendChar+0x48>)
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	4a0e      	ldr	r2, [pc, #56]	; (8000318 <ITM_SendChar+0x48>)
 80002e0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002e4:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002e6:	4b0d      	ldr	r3, [pc, #52]	; (800031c <ITM_SendChar+0x4c>)
 80002e8:	681b      	ldr	r3, [r3, #0]
 80002ea:	4a0c      	ldr	r2, [pc, #48]	; (800031c <ITM_SendChar+0x4c>)
 80002ec:	f043 0301 	orr.w	r3, r3, #1
 80002f0:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80002f2:	bf00      	nop
 80002f4:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002f8:	681b      	ldr	r3, [r3, #0]
 80002fa:	f003 0301 	and.w	r3, r3, #1
 80002fe:	2b00      	cmp	r3, #0
 8000300:	d0f8      	beq.n	80002f4 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000302:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8000306:	79fb      	ldrb	r3, [r7, #7]
 8000308:	6013      	str	r3, [r2, #0]
}
 800030a:	bf00      	nop
 800030c:	370c      	adds	r7, #12
 800030e:	46bd      	mov	sp, r7
 8000310:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000314:	4770      	bx	lr
 8000316:	bf00      	nop
 8000318:	e000edfc 	.word	0xe000edfc
 800031c:	e0000e00 	.word	0xe0000e00

08000320 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000320:	b580      	push	{r7, lr}
 8000322:	b086      	sub	sp, #24
 8000324:	af00      	add	r7, sp, #0
 8000326:	60f8      	str	r0, [r7, #12]
 8000328:	60b9      	str	r1, [r7, #8]
 800032a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800032c:	2300      	movs	r3, #0
 800032e:	617b      	str	r3, [r7, #20]
 8000330:	e00a      	b.n	8000348 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000332:	f3af 8000 	nop.w
 8000336:	4601      	mov	r1, r0
 8000338:	68bb      	ldr	r3, [r7, #8]
 800033a:	1c5a      	adds	r2, r3, #1
 800033c:	60ba      	str	r2, [r7, #8]
 800033e:	b2ca      	uxtb	r2, r1
 8000340:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000342:	697b      	ldr	r3, [r7, #20]
 8000344:	3301      	adds	r3, #1
 8000346:	617b      	str	r3, [r7, #20]
 8000348:	697a      	ldr	r2, [r7, #20]
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	429a      	cmp	r2, r3
 800034e:	dbf0      	blt.n	8000332 <_read+0x12>
	}

return len;
 8000350:	687b      	ldr	r3, [r7, #4]
}
 8000352:	4618      	mov	r0, r3
 8000354:	3718      	adds	r7, #24
 8000356:	46bd      	mov	sp, r7
 8000358:	bd80      	pop	{r7, pc}

0800035a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800035a:	b580      	push	{r7, lr}
 800035c:	b086      	sub	sp, #24
 800035e:	af00      	add	r7, sp, #0
 8000360:	60f8      	str	r0, [r7, #12]
 8000362:	60b9      	str	r1, [r7, #8]
 8000364:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000366:	2300      	movs	r3, #0
 8000368:	617b      	str	r3, [r7, #20]
 800036a:	e009      	b.n	8000380 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 800036c:	68bb      	ldr	r3, [r7, #8]
 800036e:	1c5a      	adds	r2, r3, #1
 8000370:	60ba      	str	r2, [r7, #8]
 8000372:	781b      	ldrb	r3, [r3, #0]
 8000374:	4618      	mov	r0, r3
 8000376:	f7ff ffab 	bl	80002d0 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800037a:	697b      	ldr	r3, [r7, #20]
 800037c:	3301      	adds	r3, #1
 800037e:	617b      	str	r3, [r7, #20]
 8000380:	697a      	ldr	r2, [r7, #20]
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	429a      	cmp	r2, r3
 8000386:	dbf1      	blt.n	800036c <_write+0x12>
	}
	return len;
 8000388:	687b      	ldr	r3, [r7, #4]
}
 800038a:	4618      	mov	r0, r3
 800038c:	3718      	adds	r7, #24
 800038e:	46bd      	mov	sp, r7
 8000390:	bd80      	pop	{r7, pc}

08000392 <_close>:

int _close(int file)
{
 8000392:	b480      	push	{r7}
 8000394:	b083      	sub	sp, #12
 8000396:	af00      	add	r7, sp, #0
 8000398:	6078      	str	r0, [r7, #4]
	return -1;
 800039a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800039e:	4618      	mov	r0, r3
 80003a0:	370c      	adds	r7, #12
 80003a2:	46bd      	mov	sp, r7
 80003a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003a8:	4770      	bx	lr

080003aa <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003aa:	b480      	push	{r7}
 80003ac:	b083      	sub	sp, #12
 80003ae:	af00      	add	r7, sp, #0
 80003b0:	6078      	str	r0, [r7, #4]
 80003b2:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80003b4:	683b      	ldr	r3, [r7, #0]
 80003b6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003ba:	605a      	str	r2, [r3, #4]
	return 0;
 80003bc:	2300      	movs	r3, #0
}
 80003be:	4618      	mov	r0, r3
 80003c0:	370c      	adds	r7, #12
 80003c2:	46bd      	mov	sp, r7
 80003c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c8:	4770      	bx	lr

080003ca <_isatty>:

int _isatty(int file)
{
 80003ca:	b480      	push	{r7}
 80003cc:	b083      	sub	sp, #12
 80003ce:	af00      	add	r7, sp, #0
 80003d0:	6078      	str	r0, [r7, #4]
	return 1;
 80003d2:	2301      	movs	r3, #1
}
 80003d4:	4618      	mov	r0, r3
 80003d6:	370c      	adds	r7, #12
 80003d8:	46bd      	mov	sp, r7
 80003da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003de:	4770      	bx	lr

080003e0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003e0:	b480      	push	{r7}
 80003e2:	b085      	sub	sp, #20
 80003e4:	af00      	add	r7, sp, #0
 80003e6:	60f8      	str	r0, [r7, #12]
 80003e8:	60b9      	str	r1, [r7, #8]
 80003ea:	607a      	str	r2, [r7, #4]
	return 0;
 80003ec:	2300      	movs	r3, #0
}
 80003ee:	4618      	mov	r0, r3
 80003f0:	3714      	adds	r7, #20
 80003f2:	46bd      	mov	sp, r7
 80003f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003f8:	4770      	bx	lr
	...

080003fc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003fc:	b580      	push	{r7, lr}
 80003fe:	b086      	sub	sp, #24
 8000400:	af00      	add	r7, sp, #0
 8000402:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000404:	4a14      	ldr	r2, [pc, #80]	; (8000458 <_sbrk+0x5c>)
 8000406:	4b15      	ldr	r3, [pc, #84]	; (800045c <_sbrk+0x60>)
 8000408:	1ad3      	subs	r3, r2, r3
 800040a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800040c:	697b      	ldr	r3, [r7, #20]
 800040e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000410:	4b13      	ldr	r3, [pc, #76]	; (8000460 <_sbrk+0x64>)
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	2b00      	cmp	r3, #0
 8000416:	d102      	bne.n	800041e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000418:	4b11      	ldr	r3, [pc, #68]	; (8000460 <_sbrk+0x64>)
 800041a:	4a12      	ldr	r2, [pc, #72]	; (8000464 <_sbrk+0x68>)
 800041c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800041e:	4b10      	ldr	r3, [pc, #64]	; (8000460 <_sbrk+0x64>)
 8000420:	681a      	ldr	r2, [r3, #0]
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	4413      	add	r3, r2
 8000426:	693a      	ldr	r2, [r7, #16]
 8000428:	429a      	cmp	r2, r3
 800042a:	d207      	bcs.n	800043c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800042c:	f000 f846 	bl	80004bc <__errno>
 8000430:	4603      	mov	r3, r0
 8000432:	220c      	movs	r2, #12
 8000434:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000436:	f04f 33ff 	mov.w	r3, #4294967295
 800043a:	e009      	b.n	8000450 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800043c:	4b08      	ldr	r3, [pc, #32]	; (8000460 <_sbrk+0x64>)
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000442:	4b07      	ldr	r3, [pc, #28]	; (8000460 <_sbrk+0x64>)
 8000444:	681a      	ldr	r2, [r3, #0]
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	4413      	add	r3, r2
 800044a:	4a05      	ldr	r2, [pc, #20]	; (8000460 <_sbrk+0x64>)
 800044c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800044e:	68fb      	ldr	r3, [r7, #12]
}
 8000450:	4618      	mov	r0, r3
 8000452:	3718      	adds	r7, #24
 8000454:	46bd      	mov	sp, r7
 8000456:	bd80      	pop	{r7, pc}
 8000458:	20020000 	.word	0x20020000
 800045c:	00000400 	.word	0x00000400
 8000460:	20000080 	.word	0x20000080
 8000464:	200000a0 	.word	0x200000a0

08000468 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000468:	480d      	ldr	r0, [pc, #52]	; (80004a0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800046a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800046c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000470:	480c      	ldr	r0, [pc, #48]	; (80004a4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000472:	490d      	ldr	r1, [pc, #52]	; (80004a8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000474:	4a0d      	ldr	r2, [pc, #52]	; (80004ac <LoopForever+0xe>)
  movs r3, #0
 8000476:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000478:	e002      	b.n	8000480 <LoopCopyDataInit>

0800047a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800047a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800047c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800047e:	3304      	adds	r3, #4

08000480 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000480:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000482:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000484:	d3f9      	bcc.n	800047a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000486:	4a0a      	ldr	r2, [pc, #40]	; (80004b0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000488:	4c0a      	ldr	r4, [pc, #40]	; (80004b4 <LoopForever+0x16>)
  movs r3, #0
 800048a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800048c:	e001      	b.n	8000492 <LoopFillZerobss>

0800048e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800048e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000490:	3204      	adds	r2, #4

08000492 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000492:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000494:	d3fb      	bcc.n	800048e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000496:	f000 f817 	bl	80004c8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800049a:	f7ff fef1 	bl	8000280 <main>

0800049e <LoopForever>:

LoopForever:
    b LoopForever
 800049e:	e7fe      	b.n	800049e <LoopForever>
  ldr   r0, =_estack
 80004a0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004a4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004a8:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80004ac:	0800154c 	.word	0x0800154c
  ldr r2, =_sbss
 80004b0:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80004b4:	2000009c 	.word	0x2000009c

080004b8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004b8:	e7fe      	b.n	80004b8 <ADC_IRQHandler>
	...

080004bc <__errno>:
 80004bc:	4b01      	ldr	r3, [pc, #4]	; (80004c4 <__errno+0x8>)
 80004be:	6818      	ldr	r0, [r3, #0]
 80004c0:	4770      	bx	lr
 80004c2:	bf00      	nop
 80004c4:	20000000 	.word	0x20000000

080004c8 <__libc_init_array>:
 80004c8:	b570      	push	{r4, r5, r6, lr}
 80004ca:	4d0d      	ldr	r5, [pc, #52]	; (8000500 <__libc_init_array+0x38>)
 80004cc:	4c0d      	ldr	r4, [pc, #52]	; (8000504 <__libc_init_array+0x3c>)
 80004ce:	1b64      	subs	r4, r4, r5
 80004d0:	10a4      	asrs	r4, r4, #2
 80004d2:	2600      	movs	r6, #0
 80004d4:	42a6      	cmp	r6, r4
 80004d6:	d109      	bne.n	80004ec <__libc_init_array+0x24>
 80004d8:	4d0b      	ldr	r5, [pc, #44]	; (8000508 <__libc_init_array+0x40>)
 80004da:	4c0c      	ldr	r4, [pc, #48]	; (800050c <__libc_init_array+0x44>)
 80004dc:	f000 ff76 	bl	80013cc <_init>
 80004e0:	1b64      	subs	r4, r4, r5
 80004e2:	10a4      	asrs	r4, r4, #2
 80004e4:	2600      	movs	r6, #0
 80004e6:	42a6      	cmp	r6, r4
 80004e8:	d105      	bne.n	80004f6 <__libc_init_array+0x2e>
 80004ea:	bd70      	pop	{r4, r5, r6, pc}
 80004ec:	f855 3b04 	ldr.w	r3, [r5], #4
 80004f0:	4798      	blx	r3
 80004f2:	3601      	adds	r6, #1
 80004f4:	e7ee      	b.n	80004d4 <__libc_init_array+0xc>
 80004f6:	f855 3b04 	ldr.w	r3, [r5], #4
 80004fa:	4798      	blx	r3
 80004fc:	3601      	adds	r6, #1
 80004fe:	e7f2      	b.n	80004e6 <__libc_init_array+0x1e>
 8000500:	08001544 	.word	0x08001544
 8000504:	08001544 	.word	0x08001544
 8000508:	08001544 	.word	0x08001544
 800050c:	08001548 	.word	0x08001548

08000510 <memset>:
 8000510:	4402      	add	r2, r0
 8000512:	4603      	mov	r3, r0
 8000514:	4293      	cmp	r3, r2
 8000516:	d100      	bne.n	800051a <memset+0xa>
 8000518:	4770      	bx	lr
 800051a:	f803 1b01 	strb.w	r1, [r3], #1
 800051e:	e7f9      	b.n	8000514 <memset+0x4>

08000520 <iprintf>:
 8000520:	b40f      	push	{r0, r1, r2, r3}
 8000522:	4b0a      	ldr	r3, [pc, #40]	; (800054c <iprintf+0x2c>)
 8000524:	b513      	push	{r0, r1, r4, lr}
 8000526:	681c      	ldr	r4, [r3, #0]
 8000528:	b124      	cbz	r4, 8000534 <iprintf+0x14>
 800052a:	69a3      	ldr	r3, [r4, #24]
 800052c:	b913      	cbnz	r3, 8000534 <iprintf+0x14>
 800052e:	4620      	mov	r0, r4
 8000530:	f000 f866 	bl	8000600 <__sinit>
 8000534:	ab05      	add	r3, sp, #20
 8000536:	9a04      	ldr	r2, [sp, #16]
 8000538:	68a1      	ldr	r1, [r4, #8]
 800053a:	9301      	str	r3, [sp, #4]
 800053c:	4620      	mov	r0, r4
 800053e:	f000 f983 	bl	8000848 <_vfiprintf_r>
 8000542:	b002      	add	sp, #8
 8000544:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000548:	b004      	add	sp, #16
 800054a:	4770      	bx	lr
 800054c:	20000000 	.word	0x20000000

08000550 <std>:
 8000550:	2300      	movs	r3, #0
 8000552:	b510      	push	{r4, lr}
 8000554:	4604      	mov	r4, r0
 8000556:	e9c0 3300 	strd	r3, r3, [r0]
 800055a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800055e:	6083      	str	r3, [r0, #8]
 8000560:	8181      	strh	r1, [r0, #12]
 8000562:	6643      	str	r3, [r0, #100]	; 0x64
 8000564:	81c2      	strh	r2, [r0, #14]
 8000566:	6183      	str	r3, [r0, #24]
 8000568:	4619      	mov	r1, r3
 800056a:	2208      	movs	r2, #8
 800056c:	305c      	adds	r0, #92	; 0x5c
 800056e:	f7ff ffcf 	bl	8000510 <memset>
 8000572:	4b05      	ldr	r3, [pc, #20]	; (8000588 <std+0x38>)
 8000574:	6263      	str	r3, [r4, #36]	; 0x24
 8000576:	4b05      	ldr	r3, [pc, #20]	; (800058c <std+0x3c>)
 8000578:	62a3      	str	r3, [r4, #40]	; 0x28
 800057a:	4b05      	ldr	r3, [pc, #20]	; (8000590 <std+0x40>)
 800057c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800057e:	4b05      	ldr	r3, [pc, #20]	; (8000594 <std+0x44>)
 8000580:	6224      	str	r4, [r4, #32]
 8000582:	6323      	str	r3, [r4, #48]	; 0x30
 8000584:	bd10      	pop	{r4, pc}
 8000586:	bf00      	nop
 8000588:	08000df1 	.word	0x08000df1
 800058c:	08000e13 	.word	0x08000e13
 8000590:	08000e4b 	.word	0x08000e4b
 8000594:	08000e6f 	.word	0x08000e6f

08000598 <_cleanup_r>:
 8000598:	4901      	ldr	r1, [pc, #4]	; (80005a0 <_cleanup_r+0x8>)
 800059a:	f000 b8af 	b.w	80006fc <_fwalk_reent>
 800059e:	bf00      	nop
 80005a0:	08001149 	.word	0x08001149

080005a4 <__sfmoreglue>:
 80005a4:	b570      	push	{r4, r5, r6, lr}
 80005a6:	1e4a      	subs	r2, r1, #1
 80005a8:	2568      	movs	r5, #104	; 0x68
 80005aa:	4355      	muls	r5, r2
 80005ac:	460e      	mov	r6, r1
 80005ae:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80005b2:	f000 f8c5 	bl	8000740 <_malloc_r>
 80005b6:	4604      	mov	r4, r0
 80005b8:	b140      	cbz	r0, 80005cc <__sfmoreglue+0x28>
 80005ba:	2100      	movs	r1, #0
 80005bc:	e9c0 1600 	strd	r1, r6, [r0]
 80005c0:	300c      	adds	r0, #12
 80005c2:	60a0      	str	r0, [r4, #8]
 80005c4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80005c8:	f7ff ffa2 	bl	8000510 <memset>
 80005cc:	4620      	mov	r0, r4
 80005ce:	bd70      	pop	{r4, r5, r6, pc}

080005d0 <__sfp_lock_acquire>:
 80005d0:	4801      	ldr	r0, [pc, #4]	; (80005d8 <__sfp_lock_acquire+0x8>)
 80005d2:	f000 b8b3 	b.w	800073c <__retarget_lock_acquire_recursive>
 80005d6:	bf00      	nop
 80005d8:	20000094 	.word	0x20000094

080005dc <__sfp_lock_release>:
 80005dc:	4801      	ldr	r0, [pc, #4]	; (80005e4 <__sfp_lock_release+0x8>)
 80005de:	f000 b8ae 	b.w	800073e <__retarget_lock_release_recursive>
 80005e2:	bf00      	nop
 80005e4:	20000094 	.word	0x20000094

080005e8 <__sinit_lock_acquire>:
 80005e8:	4801      	ldr	r0, [pc, #4]	; (80005f0 <__sinit_lock_acquire+0x8>)
 80005ea:	f000 b8a7 	b.w	800073c <__retarget_lock_acquire_recursive>
 80005ee:	bf00      	nop
 80005f0:	2000008f 	.word	0x2000008f

080005f4 <__sinit_lock_release>:
 80005f4:	4801      	ldr	r0, [pc, #4]	; (80005fc <__sinit_lock_release+0x8>)
 80005f6:	f000 b8a2 	b.w	800073e <__retarget_lock_release_recursive>
 80005fa:	bf00      	nop
 80005fc:	2000008f 	.word	0x2000008f

08000600 <__sinit>:
 8000600:	b510      	push	{r4, lr}
 8000602:	4604      	mov	r4, r0
 8000604:	f7ff fff0 	bl	80005e8 <__sinit_lock_acquire>
 8000608:	69a3      	ldr	r3, [r4, #24]
 800060a:	b11b      	cbz	r3, 8000614 <__sinit+0x14>
 800060c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000610:	f7ff bff0 	b.w	80005f4 <__sinit_lock_release>
 8000614:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000618:	6523      	str	r3, [r4, #80]	; 0x50
 800061a:	4b13      	ldr	r3, [pc, #76]	; (8000668 <__sinit+0x68>)
 800061c:	4a13      	ldr	r2, [pc, #76]	; (800066c <__sinit+0x6c>)
 800061e:	681b      	ldr	r3, [r3, #0]
 8000620:	62a2      	str	r2, [r4, #40]	; 0x28
 8000622:	42a3      	cmp	r3, r4
 8000624:	bf04      	itt	eq
 8000626:	2301      	moveq	r3, #1
 8000628:	61a3      	streq	r3, [r4, #24]
 800062a:	4620      	mov	r0, r4
 800062c:	f000 f820 	bl	8000670 <__sfp>
 8000630:	6060      	str	r0, [r4, #4]
 8000632:	4620      	mov	r0, r4
 8000634:	f000 f81c 	bl	8000670 <__sfp>
 8000638:	60a0      	str	r0, [r4, #8]
 800063a:	4620      	mov	r0, r4
 800063c:	f000 f818 	bl	8000670 <__sfp>
 8000640:	2200      	movs	r2, #0
 8000642:	60e0      	str	r0, [r4, #12]
 8000644:	2104      	movs	r1, #4
 8000646:	6860      	ldr	r0, [r4, #4]
 8000648:	f7ff ff82 	bl	8000550 <std>
 800064c:	68a0      	ldr	r0, [r4, #8]
 800064e:	2201      	movs	r2, #1
 8000650:	2109      	movs	r1, #9
 8000652:	f7ff ff7d 	bl	8000550 <std>
 8000656:	68e0      	ldr	r0, [r4, #12]
 8000658:	2202      	movs	r2, #2
 800065a:	2112      	movs	r1, #18
 800065c:	f7ff ff78 	bl	8000550 <std>
 8000660:	2301      	movs	r3, #1
 8000662:	61a3      	str	r3, [r4, #24]
 8000664:	e7d2      	b.n	800060c <__sinit+0xc>
 8000666:	bf00      	nop
 8000668:	080014ac 	.word	0x080014ac
 800066c:	08000599 	.word	0x08000599

08000670 <__sfp>:
 8000670:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000672:	4607      	mov	r7, r0
 8000674:	f7ff ffac 	bl	80005d0 <__sfp_lock_acquire>
 8000678:	4b1e      	ldr	r3, [pc, #120]	; (80006f4 <__sfp+0x84>)
 800067a:	681e      	ldr	r6, [r3, #0]
 800067c:	69b3      	ldr	r3, [r6, #24]
 800067e:	b913      	cbnz	r3, 8000686 <__sfp+0x16>
 8000680:	4630      	mov	r0, r6
 8000682:	f7ff ffbd 	bl	8000600 <__sinit>
 8000686:	3648      	adds	r6, #72	; 0x48
 8000688:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800068c:	3b01      	subs	r3, #1
 800068e:	d503      	bpl.n	8000698 <__sfp+0x28>
 8000690:	6833      	ldr	r3, [r6, #0]
 8000692:	b30b      	cbz	r3, 80006d8 <__sfp+0x68>
 8000694:	6836      	ldr	r6, [r6, #0]
 8000696:	e7f7      	b.n	8000688 <__sfp+0x18>
 8000698:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800069c:	b9d5      	cbnz	r5, 80006d4 <__sfp+0x64>
 800069e:	4b16      	ldr	r3, [pc, #88]	; (80006f8 <__sfp+0x88>)
 80006a0:	60e3      	str	r3, [r4, #12]
 80006a2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80006a6:	6665      	str	r5, [r4, #100]	; 0x64
 80006a8:	f000 f847 	bl	800073a <__retarget_lock_init_recursive>
 80006ac:	f7ff ff96 	bl	80005dc <__sfp_lock_release>
 80006b0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80006b4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80006b8:	6025      	str	r5, [r4, #0]
 80006ba:	61a5      	str	r5, [r4, #24]
 80006bc:	2208      	movs	r2, #8
 80006be:	4629      	mov	r1, r5
 80006c0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80006c4:	f7ff ff24 	bl	8000510 <memset>
 80006c8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80006cc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80006d0:	4620      	mov	r0, r4
 80006d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006d4:	3468      	adds	r4, #104	; 0x68
 80006d6:	e7d9      	b.n	800068c <__sfp+0x1c>
 80006d8:	2104      	movs	r1, #4
 80006da:	4638      	mov	r0, r7
 80006dc:	f7ff ff62 	bl	80005a4 <__sfmoreglue>
 80006e0:	4604      	mov	r4, r0
 80006e2:	6030      	str	r0, [r6, #0]
 80006e4:	2800      	cmp	r0, #0
 80006e6:	d1d5      	bne.n	8000694 <__sfp+0x24>
 80006e8:	f7ff ff78 	bl	80005dc <__sfp_lock_release>
 80006ec:	230c      	movs	r3, #12
 80006ee:	603b      	str	r3, [r7, #0]
 80006f0:	e7ee      	b.n	80006d0 <__sfp+0x60>
 80006f2:	bf00      	nop
 80006f4:	080014ac 	.word	0x080014ac
 80006f8:	ffff0001 	.word	0xffff0001

080006fc <_fwalk_reent>:
 80006fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000700:	4606      	mov	r6, r0
 8000702:	4688      	mov	r8, r1
 8000704:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000708:	2700      	movs	r7, #0
 800070a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800070e:	f1b9 0901 	subs.w	r9, r9, #1
 8000712:	d505      	bpl.n	8000720 <_fwalk_reent+0x24>
 8000714:	6824      	ldr	r4, [r4, #0]
 8000716:	2c00      	cmp	r4, #0
 8000718:	d1f7      	bne.n	800070a <_fwalk_reent+0xe>
 800071a:	4638      	mov	r0, r7
 800071c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000720:	89ab      	ldrh	r3, [r5, #12]
 8000722:	2b01      	cmp	r3, #1
 8000724:	d907      	bls.n	8000736 <_fwalk_reent+0x3a>
 8000726:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800072a:	3301      	adds	r3, #1
 800072c:	d003      	beq.n	8000736 <_fwalk_reent+0x3a>
 800072e:	4629      	mov	r1, r5
 8000730:	4630      	mov	r0, r6
 8000732:	47c0      	blx	r8
 8000734:	4307      	orrs	r7, r0
 8000736:	3568      	adds	r5, #104	; 0x68
 8000738:	e7e9      	b.n	800070e <_fwalk_reent+0x12>

0800073a <__retarget_lock_init_recursive>:
 800073a:	4770      	bx	lr

0800073c <__retarget_lock_acquire_recursive>:
 800073c:	4770      	bx	lr

0800073e <__retarget_lock_release_recursive>:
 800073e:	4770      	bx	lr

08000740 <_malloc_r>:
 8000740:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000742:	1ccd      	adds	r5, r1, #3
 8000744:	f025 0503 	bic.w	r5, r5, #3
 8000748:	3508      	adds	r5, #8
 800074a:	2d0c      	cmp	r5, #12
 800074c:	bf38      	it	cc
 800074e:	250c      	movcc	r5, #12
 8000750:	2d00      	cmp	r5, #0
 8000752:	4606      	mov	r6, r0
 8000754:	db01      	blt.n	800075a <_malloc_r+0x1a>
 8000756:	42a9      	cmp	r1, r5
 8000758:	d903      	bls.n	8000762 <_malloc_r+0x22>
 800075a:	230c      	movs	r3, #12
 800075c:	6033      	str	r3, [r6, #0]
 800075e:	2000      	movs	r0, #0
 8000760:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000762:	f000 fda3 	bl	80012ac <__malloc_lock>
 8000766:	4921      	ldr	r1, [pc, #132]	; (80007ec <_malloc_r+0xac>)
 8000768:	680a      	ldr	r2, [r1, #0]
 800076a:	4614      	mov	r4, r2
 800076c:	b99c      	cbnz	r4, 8000796 <_malloc_r+0x56>
 800076e:	4f20      	ldr	r7, [pc, #128]	; (80007f0 <_malloc_r+0xb0>)
 8000770:	683b      	ldr	r3, [r7, #0]
 8000772:	b923      	cbnz	r3, 800077e <_malloc_r+0x3e>
 8000774:	4621      	mov	r1, r4
 8000776:	4630      	mov	r0, r6
 8000778:	f000 fb2a 	bl	8000dd0 <_sbrk_r>
 800077c:	6038      	str	r0, [r7, #0]
 800077e:	4629      	mov	r1, r5
 8000780:	4630      	mov	r0, r6
 8000782:	f000 fb25 	bl	8000dd0 <_sbrk_r>
 8000786:	1c43      	adds	r3, r0, #1
 8000788:	d123      	bne.n	80007d2 <_malloc_r+0x92>
 800078a:	230c      	movs	r3, #12
 800078c:	6033      	str	r3, [r6, #0]
 800078e:	4630      	mov	r0, r6
 8000790:	f000 fd92 	bl	80012b8 <__malloc_unlock>
 8000794:	e7e3      	b.n	800075e <_malloc_r+0x1e>
 8000796:	6823      	ldr	r3, [r4, #0]
 8000798:	1b5b      	subs	r3, r3, r5
 800079a:	d417      	bmi.n	80007cc <_malloc_r+0x8c>
 800079c:	2b0b      	cmp	r3, #11
 800079e:	d903      	bls.n	80007a8 <_malloc_r+0x68>
 80007a0:	6023      	str	r3, [r4, #0]
 80007a2:	441c      	add	r4, r3
 80007a4:	6025      	str	r5, [r4, #0]
 80007a6:	e004      	b.n	80007b2 <_malloc_r+0x72>
 80007a8:	6863      	ldr	r3, [r4, #4]
 80007aa:	42a2      	cmp	r2, r4
 80007ac:	bf0c      	ite	eq
 80007ae:	600b      	streq	r3, [r1, #0]
 80007b0:	6053      	strne	r3, [r2, #4]
 80007b2:	4630      	mov	r0, r6
 80007b4:	f000 fd80 	bl	80012b8 <__malloc_unlock>
 80007b8:	f104 000b 	add.w	r0, r4, #11
 80007bc:	1d23      	adds	r3, r4, #4
 80007be:	f020 0007 	bic.w	r0, r0, #7
 80007c2:	1ac2      	subs	r2, r0, r3
 80007c4:	d0cc      	beq.n	8000760 <_malloc_r+0x20>
 80007c6:	1a1b      	subs	r3, r3, r0
 80007c8:	50a3      	str	r3, [r4, r2]
 80007ca:	e7c9      	b.n	8000760 <_malloc_r+0x20>
 80007cc:	4622      	mov	r2, r4
 80007ce:	6864      	ldr	r4, [r4, #4]
 80007d0:	e7cc      	b.n	800076c <_malloc_r+0x2c>
 80007d2:	1cc4      	adds	r4, r0, #3
 80007d4:	f024 0403 	bic.w	r4, r4, #3
 80007d8:	42a0      	cmp	r0, r4
 80007da:	d0e3      	beq.n	80007a4 <_malloc_r+0x64>
 80007dc:	1a21      	subs	r1, r4, r0
 80007de:	4630      	mov	r0, r6
 80007e0:	f000 faf6 	bl	8000dd0 <_sbrk_r>
 80007e4:	3001      	adds	r0, #1
 80007e6:	d1dd      	bne.n	80007a4 <_malloc_r+0x64>
 80007e8:	e7cf      	b.n	800078a <_malloc_r+0x4a>
 80007ea:	bf00      	nop
 80007ec:	20000084 	.word	0x20000084
 80007f0:	20000088 	.word	0x20000088

080007f4 <__sfputc_r>:
 80007f4:	6893      	ldr	r3, [r2, #8]
 80007f6:	3b01      	subs	r3, #1
 80007f8:	2b00      	cmp	r3, #0
 80007fa:	b410      	push	{r4}
 80007fc:	6093      	str	r3, [r2, #8]
 80007fe:	da08      	bge.n	8000812 <__sfputc_r+0x1e>
 8000800:	6994      	ldr	r4, [r2, #24]
 8000802:	42a3      	cmp	r3, r4
 8000804:	db01      	blt.n	800080a <__sfputc_r+0x16>
 8000806:	290a      	cmp	r1, #10
 8000808:	d103      	bne.n	8000812 <__sfputc_r+0x1e>
 800080a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800080e:	f000 bb33 	b.w	8000e78 <__swbuf_r>
 8000812:	6813      	ldr	r3, [r2, #0]
 8000814:	1c58      	adds	r0, r3, #1
 8000816:	6010      	str	r0, [r2, #0]
 8000818:	7019      	strb	r1, [r3, #0]
 800081a:	4608      	mov	r0, r1
 800081c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000820:	4770      	bx	lr

08000822 <__sfputs_r>:
 8000822:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000824:	4606      	mov	r6, r0
 8000826:	460f      	mov	r7, r1
 8000828:	4614      	mov	r4, r2
 800082a:	18d5      	adds	r5, r2, r3
 800082c:	42ac      	cmp	r4, r5
 800082e:	d101      	bne.n	8000834 <__sfputs_r+0x12>
 8000830:	2000      	movs	r0, #0
 8000832:	e007      	b.n	8000844 <__sfputs_r+0x22>
 8000834:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000838:	463a      	mov	r2, r7
 800083a:	4630      	mov	r0, r6
 800083c:	f7ff ffda 	bl	80007f4 <__sfputc_r>
 8000840:	1c43      	adds	r3, r0, #1
 8000842:	d1f3      	bne.n	800082c <__sfputs_r+0xa>
 8000844:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000848 <_vfiprintf_r>:
 8000848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800084c:	460d      	mov	r5, r1
 800084e:	b09d      	sub	sp, #116	; 0x74
 8000850:	4614      	mov	r4, r2
 8000852:	4698      	mov	r8, r3
 8000854:	4606      	mov	r6, r0
 8000856:	b118      	cbz	r0, 8000860 <_vfiprintf_r+0x18>
 8000858:	6983      	ldr	r3, [r0, #24]
 800085a:	b90b      	cbnz	r3, 8000860 <_vfiprintf_r+0x18>
 800085c:	f7ff fed0 	bl	8000600 <__sinit>
 8000860:	4b89      	ldr	r3, [pc, #548]	; (8000a88 <_vfiprintf_r+0x240>)
 8000862:	429d      	cmp	r5, r3
 8000864:	d11b      	bne.n	800089e <_vfiprintf_r+0x56>
 8000866:	6875      	ldr	r5, [r6, #4]
 8000868:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800086a:	07d9      	lsls	r1, r3, #31
 800086c:	d405      	bmi.n	800087a <_vfiprintf_r+0x32>
 800086e:	89ab      	ldrh	r3, [r5, #12]
 8000870:	059a      	lsls	r2, r3, #22
 8000872:	d402      	bmi.n	800087a <_vfiprintf_r+0x32>
 8000874:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000876:	f7ff ff61 	bl	800073c <__retarget_lock_acquire_recursive>
 800087a:	89ab      	ldrh	r3, [r5, #12]
 800087c:	071b      	lsls	r3, r3, #28
 800087e:	d501      	bpl.n	8000884 <_vfiprintf_r+0x3c>
 8000880:	692b      	ldr	r3, [r5, #16]
 8000882:	b9eb      	cbnz	r3, 80008c0 <_vfiprintf_r+0x78>
 8000884:	4629      	mov	r1, r5
 8000886:	4630      	mov	r0, r6
 8000888:	f000 fb5a 	bl	8000f40 <__swsetup_r>
 800088c:	b1c0      	cbz	r0, 80008c0 <_vfiprintf_r+0x78>
 800088e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000890:	07dc      	lsls	r4, r3, #31
 8000892:	d50e      	bpl.n	80008b2 <_vfiprintf_r+0x6a>
 8000894:	f04f 30ff 	mov.w	r0, #4294967295
 8000898:	b01d      	add	sp, #116	; 0x74
 800089a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800089e:	4b7b      	ldr	r3, [pc, #492]	; (8000a8c <_vfiprintf_r+0x244>)
 80008a0:	429d      	cmp	r5, r3
 80008a2:	d101      	bne.n	80008a8 <_vfiprintf_r+0x60>
 80008a4:	68b5      	ldr	r5, [r6, #8]
 80008a6:	e7df      	b.n	8000868 <_vfiprintf_r+0x20>
 80008a8:	4b79      	ldr	r3, [pc, #484]	; (8000a90 <_vfiprintf_r+0x248>)
 80008aa:	429d      	cmp	r5, r3
 80008ac:	bf08      	it	eq
 80008ae:	68f5      	ldreq	r5, [r6, #12]
 80008b0:	e7da      	b.n	8000868 <_vfiprintf_r+0x20>
 80008b2:	89ab      	ldrh	r3, [r5, #12]
 80008b4:	0598      	lsls	r0, r3, #22
 80008b6:	d4ed      	bmi.n	8000894 <_vfiprintf_r+0x4c>
 80008b8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80008ba:	f7ff ff40 	bl	800073e <__retarget_lock_release_recursive>
 80008be:	e7e9      	b.n	8000894 <_vfiprintf_r+0x4c>
 80008c0:	2300      	movs	r3, #0
 80008c2:	9309      	str	r3, [sp, #36]	; 0x24
 80008c4:	2320      	movs	r3, #32
 80008c6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80008ca:	f8cd 800c 	str.w	r8, [sp, #12]
 80008ce:	2330      	movs	r3, #48	; 0x30
 80008d0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000a94 <_vfiprintf_r+0x24c>
 80008d4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80008d8:	f04f 0901 	mov.w	r9, #1
 80008dc:	4623      	mov	r3, r4
 80008de:	469a      	mov	sl, r3
 80008e0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80008e4:	b10a      	cbz	r2, 80008ea <_vfiprintf_r+0xa2>
 80008e6:	2a25      	cmp	r2, #37	; 0x25
 80008e8:	d1f9      	bne.n	80008de <_vfiprintf_r+0x96>
 80008ea:	ebba 0b04 	subs.w	fp, sl, r4
 80008ee:	d00b      	beq.n	8000908 <_vfiprintf_r+0xc0>
 80008f0:	465b      	mov	r3, fp
 80008f2:	4622      	mov	r2, r4
 80008f4:	4629      	mov	r1, r5
 80008f6:	4630      	mov	r0, r6
 80008f8:	f7ff ff93 	bl	8000822 <__sfputs_r>
 80008fc:	3001      	adds	r0, #1
 80008fe:	f000 80aa 	beq.w	8000a56 <_vfiprintf_r+0x20e>
 8000902:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000904:	445a      	add	r2, fp
 8000906:	9209      	str	r2, [sp, #36]	; 0x24
 8000908:	f89a 3000 	ldrb.w	r3, [sl]
 800090c:	2b00      	cmp	r3, #0
 800090e:	f000 80a2 	beq.w	8000a56 <_vfiprintf_r+0x20e>
 8000912:	2300      	movs	r3, #0
 8000914:	f04f 32ff 	mov.w	r2, #4294967295
 8000918:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800091c:	f10a 0a01 	add.w	sl, sl, #1
 8000920:	9304      	str	r3, [sp, #16]
 8000922:	9307      	str	r3, [sp, #28]
 8000924:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000928:	931a      	str	r3, [sp, #104]	; 0x68
 800092a:	4654      	mov	r4, sl
 800092c:	2205      	movs	r2, #5
 800092e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000932:	4858      	ldr	r0, [pc, #352]	; (8000a94 <_vfiprintf_r+0x24c>)
 8000934:	f7ff fc54 	bl	80001e0 <memchr>
 8000938:	9a04      	ldr	r2, [sp, #16]
 800093a:	b9d8      	cbnz	r0, 8000974 <_vfiprintf_r+0x12c>
 800093c:	06d1      	lsls	r1, r2, #27
 800093e:	bf44      	itt	mi
 8000940:	2320      	movmi	r3, #32
 8000942:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000946:	0713      	lsls	r3, r2, #28
 8000948:	bf44      	itt	mi
 800094a:	232b      	movmi	r3, #43	; 0x2b
 800094c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000950:	f89a 3000 	ldrb.w	r3, [sl]
 8000954:	2b2a      	cmp	r3, #42	; 0x2a
 8000956:	d015      	beq.n	8000984 <_vfiprintf_r+0x13c>
 8000958:	9a07      	ldr	r2, [sp, #28]
 800095a:	4654      	mov	r4, sl
 800095c:	2000      	movs	r0, #0
 800095e:	f04f 0c0a 	mov.w	ip, #10
 8000962:	4621      	mov	r1, r4
 8000964:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000968:	3b30      	subs	r3, #48	; 0x30
 800096a:	2b09      	cmp	r3, #9
 800096c:	d94e      	bls.n	8000a0c <_vfiprintf_r+0x1c4>
 800096e:	b1b0      	cbz	r0, 800099e <_vfiprintf_r+0x156>
 8000970:	9207      	str	r2, [sp, #28]
 8000972:	e014      	b.n	800099e <_vfiprintf_r+0x156>
 8000974:	eba0 0308 	sub.w	r3, r0, r8
 8000978:	fa09 f303 	lsl.w	r3, r9, r3
 800097c:	4313      	orrs	r3, r2
 800097e:	9304      	str	r3, [sp, #16]
 8000980:	46a2      	mov	sl, r4
 8000982:	e7d2      	b.n	800092a <_vfiprintf_r+0xe2>
 8000984:	9b03      	ldr	r3, [sp, #12]
 8000986:	1d19      	adds	r1, r3, #4
 8000988:	681b      	ldr	r3, [r3, #0]
 800098a:	9103      	str	r1, [sp, #12]
 800098c:	2b00      	cmp	r3, #0
 800098e:	bfbb      	ittet	lt
 8000990:	425b      	neglt	r3, r3
 8000992:	f042 0202 	orrlt.w	r2, r2, #2
 8000996:	9307      	strge	r3, [sp, #28]
 8000998:	9307      	strlt	r3, [sp, #28]
 800099a:	bfb8      	it	lt
 800099c:	9204      	strlt	r2, [sp, #16]
 800099e:	7823      	ldrb	r3, [r4, #0]
 80009a0:	2b2e      	cmp	r3, #46	; 0x2e
 80009a2:	d10c      	bne.n	80009be <_vfiprintf_r+0x176>
 80009a4:	7863      	ldrb	r3, [r4, #1]
 80009a6:	2b2a      	cmp	r3, #42	; 0x2a
 80009a8:	d135      	bne.n	8000a16 <_vfiprintf_r+0x1ce>
 80009aa:	9b03      	ldr	r3, [sp, #12]
 80009ac:	1d1a      	adds	r2, r3, #4
 80009ae:	681b      	ldr	r3, [r3, #0]
 80009b0:	9203      	str	r2, [sp, #12]
 80009b2:	2b00      	cmp	r3, #0
 80009b4:	bfb8      	it	lt
 80009b6:	f04f 33ff 	movlt.w	r3, #4294967295
 80009ba:	3402      	adds	r4, #2
 80009bc:	9305      	str	r3, [sp, #20]
 80009be:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000aa4 <_vfiprintf_r+0x25c>
 80009c2:	7821      	ldrb	r1, [r4, #0]
 80009c4:	2203      	movs	r2, #3
 80009c6:	4650      	mov	r0, sl
 80009c8:	f7ff fc0a 	bl	80001e0 <memchr>
 80009cc:	b140      	cbz	r0, 80009e0 <_vfiprintf_r+0x198>
 80009ce:	2340      	movs	r3, #64	; 0x40
 80009d0:	eba0 000a 	sub.w	r0, r0, sl
 80009d4:	fa03 f000 	lsl.w	r0, r3, r0
 80009d8:	9b04      	ldr	r3, [sp, #16]
 80009da:	4303      	orrs	r3, r0
 80009dc:	3401      	adds	r4, #1
 80009de:	9304      	str	r3, [sp, #16]
 80009e0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009e4:	482c      	ldr	r0, [pc, #176]	; (8000a98 <_vfiprintf_r+0x250>)
 80009e6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80009ea:	2206      	movs	r2, #6
 80009ec:	f7ff fbf8 	bl	80001e0 <memchr>
 80009f0:	2800      	cmp	r0, #0
 80009f2:	d03f      	beq.n	8000a74 <_vfiprintf_r+0x22c>
 80009f4:	4b29      	ldr	r3, [pc, #164]	; (8000a9c <_vfiprintf_r+0x254>)
 80009f6:	bb1b      	cbnz	r3, 8000a40 <_vfiprintf_r+0x1f8>
 80009f8:	9b03      	ldr	r3, [sp, #12]
 80009fa:	3307      	adds	r3, #7
 80009fc:	f023 0307 	bic.w	r3, r3, #7
 8000a00:	3308      	adds	r3, #8
 8000a02:	9303      	str	r3, [sp, #12]
 8000a04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000a06:	443b      	add	r3, r7
 8000a08:	9309      	str	r3, [sp, #36]	; 0x24
 8000a0a:	e767      	b.n	80008dc <_vfiprintf_r+0x94>
 8000a0c:	fb0c 3202 	mla	r2, ip, r2, r3
 8000a10:	460c      	mov	r4, r1
 8000a12:	2001      	movs	r0, #1
 8000a14:	e7a5      	b.n	8000962 <_vfiprintf_r+0x11a>
 8000a16:	2300      	movs	r3, #0
 8000a18:	3401      	adds	r4, #1
 8000a1a:	9305      	str	r3, [sp, #20]
 8000a1c:	4619      	mov	r1, r3
 8000a1e:	f04f 0c0a 	mov.w	ip, #10
 8000a22:	4620      	mov	r0, r4
 8000a24:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000a28:	3a30      	subs	r2, #48	; 0x30
 8000a2a:	2a09      	cmp	r2, #9
 8000a2c:	d903      	bls.n	8000a36 <_vfiprintf_r+0x1ee>
 8000a2e:	2b00      	cmp	r3, #0
 8000a30:	d0c5      	beq.n	80009be <_vfiprintf_r+0x176>
 8000a32:	9105      	str	r1, [sp, #20]
 8000a34:	e7c3      	b.n	80009be <_vfiprintf_r+0x176>
 8000a36:	fb0c 2101 	mla	r1, ip, r1, r2
 8000a3a:	4604      	mov	r4, r0
 8000a3c:	2301      	movs	r3, #1
 8000a3e:	e7f0      	b.n	8000a22 <_vfiprintf_r+0x1da>
 8000a40:	ab03      	add	r3, sp, #12
 8000a42:	9300      	str	r3, [sp, #0]
 8000a44:	462a      	mov	r2, r5
 8000a46:	4b16      	ldr	r3, [pc, #88]	; (8000aa0 <_vfiprintf_r+0x258>)
 8000a48:	a904      	add	r1, sp, #16
 8000a4a:	4630      	mov	r0, r6
 8000a4c:	f3af 8000 	nop.w
 8000a50:	4607      	mov	r7, r0
 8000a52:	1c78      	adds	r0, r7, #1
 8000a54:	d1d6      	bne.n	8000a04 <_vfiprintf_r+0x1bc>
 8000a56:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a58:	07d9      	lsls	r1, r3, #31
 8000a5a:	d405      	bmi.n	8000a68 <_vfiprintf_r+0x220>
 8000a5c:	89ab      	ldrh	r3, [r5, #12]
 8000a5e:	059a      	lsls	r2, r3, #22
 8000a60:	d402      	bmi.n	8000a68 <_vfiprintf_r+0x220>
 8000a62:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a64:	f7ff fe6b 	bl	800073e <__retarget_lock_release_recursive>
 8000a68:	89ab      	ldrh	r3, [r5, #12]
 8000a6a:	065b      	lsls	r3, r3, #25
 8000a6c:	f53f af12 	bmi.w	8000894 <_vfiprintf_r+0x4c>
 8000a70:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000a72:	e711      	b.n	8000898 <_vfiprintf_r+0x50>
 8000a74:	ab03      	add	r3, sp, #12
 8000a76:	9300      	str	r3, [sp, #0]
 8000a78:	462a      	mov	r2, r5
 8000a7a:	4b09      	ldr	r3, [pc, #36]	; (8000aa0 <_vfiprintf_r+0x258>)
 8000a7c:	a904      	add	r1, sp, #16
 8000a7e:	4630      	mov	r0, r6
 8000a80:	f000 f880 	bl	8000b84 <_printf_i>
 8000a84:	e7e4      	b.n	8000a50 <_vfiprintf_r+0x208>
 8000a86:	bf00      	nop
 8000a88:	080014d0 	.word	0x080014d0
 8000a8c:	080014f0 	.word	0x080014f0
 8000a90:	080014b0 	.word	0x080014b0
 8000a94:	08001510 	.word	0x08001510
 8000a98:	0800151a 	.word	0x0800151a
 8000a9c:	00000000 	.word	0x00000000
 8000aa0:	08000823 	.word	0x08000823
 8000aa4:	08001516 	.word	0x08001516

08000aa8 <_printf_common>:
 8000aa8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000aac:	4616      	mov	r6, r2
 8000aae:	4699      	mov	r9, r3
 8000ab0:	688a      	ldr	r2, [r1, #8]
 8000ab2:	690b      	ldr	r3, [r1, #16]
 8000ab4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000ab8:	4293      	cmp	r3, r2
 8000aba:	bfb8      	it	lt
 8000abc:	4613      	movlt	r3, r2
 8000abe:	6033      	str	r3, [r6, #0]
 8000ac0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000ac4:	4607      	mov	r7, r0
 8000ac6:	460c      	mov	r4, r1
 8000ac8:	b10a      	cbz	r2, 8000ace <_printf_common+0x26>
 8000aca:	3301      	adds	r3, #1
 8000acc:	6033      	str	r3, [r6, #0]
 8000ace:	6823      	ldr	r3, [r4, #0]
 8000ad0:	0699      	lsls	r1, r3, #26
 8000ad2:	bf42      	ittt	mi
 8000ad4:	6833      	ldrmi	r3, [r6, #0]
 8000ad6:	3302      	addmi	r3, #2
 8000ad8:	6033      	strmi	r3, [r6, #0]
 8000ada:	6825      	ldr	r5, [r4, #0]
 8000adc:	f015 0506 	ands.w	r5, r5, #6
 8000ae0:	d106      	bne.n	8000af0 <_printf_common+0x48>
 8000ae2:	f104 0a19 	add.w	sl, r4, #25
 8000ae6:	68e3      	ldr	r3, [r4, #12]
 8000ae8:	6832      	ldr	r2, [r6, #0]
 8000aea:	1a9b      	subs	r3, r3, r2
 8000aec:	42ab      	cmp	r3, r5
 8000aee:	dc26      	bgt.n	8000b3e <_printf_common+0x96>
 8000af0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000af4:	1e13      	subs	r3, r2, #0
 8000af6:	6822      	ldr	r2, [r4, #0]
 8000af8:	bf18      	it	ne
 8000afa:	2301      	movne	r3, #1
 8000afc:	0692      	lsls	r2, r2, #26
 8000afe:	d42b      	bmi.n	8000b58 <_printf_common+0xb0>
 8000b00:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000b04:	4649      	mov	r1, r9
 8000b06:	4638      	mov	r0, r7
 8000b08:	47c0      	blx	r8
 8000b0a:	3001      	adds	r0, #1
 8000b0c:	d01e      	beq.n	8000b4c <_printf_common+0xa4>
 8000b0e:	6823      	ldr	r3, [r4, #0]
 8000b10:	68e5      	ldr	r5, [r4, #12]
 8000b12:	6832      	ldr	r2, [r6, #0]
 8000b14:	f003 0306 	and.w	r3, r3, #6
 8000b18:	2b04      	cmp	r3, #4
 8000b1a:	bf08      	it	eq
 8000b1c:	1aad      	subeq	r5, r5, r2
 8000b1e:	68a3      	ldr	r3, [r4, #8]
 8000b20:	6922      	ldr	r2, [r4, #16]
 8000b22:	bf0c      	ite	eq
 8000b24:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000b28:	2500      	movne	r5, #0
 8000b2a:	4293      	cmp	r3, r2
 8000b2c:	bfc4      	itt	gt
 8000b2e:	1a9b      	subgt	r3, r3, r2
 8000b30:	18ed      	addgt	r5, r5, r3
 8000b32:	2600      	movs	r6, #0
 8000b34:	341a      	adds	r4, #26
 8000b36:	42b5      	cmp	r5, r6
 8000b38:	d11a      	bne.n	8000b70 <_printf_common+0xc8>
 8000b3a:	2000      	movs	r0, #0
 8000b3c:	e008      	b.n	8000b50 <_printf_common+0xa8>
 8000b3e:	2301      	movs	r3, #1
 8000b40:	4652      	mov	r2, sl
 8000b42:	4649      	mov	r1, r9
 8000b44:	4638      	mov	r0, r7
 8000b46:	47c0      	blx	r8
 8000b48:	3001      	adds	r0, #1
 8000b4a:	d103      	bne.n	8000b54 <_printf_common+0xac>
 8000b4c:	f04f 30ff 	mov.w	r0, #4294967295
 8000b50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b54:	3501      	adds	r5, #1
 8000b56:	e7c6      	b.n	8000ae6 <_printf_common+0x3e>
 8000b58:	18e1      	adds	r1, r4, r3
 8000b5a:	1c5a      	adds	r2, r3, #1
 8000b5c:	2030      	movs	r0, #48	; 0x30
 8000b5e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000b62:	4422      	add	r2, r4
 8000b64:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000b68:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000b6c:	3302      	adds	r3, #2
 8000b6e:	e7c7      	b.n	8000b00 <_printf_common+0x58>
 8000b70:	2301      	movs	r3, #1
 8000b72:	4622      	mov	r2, r4
 8000b74:	4649      	mov	r1, r9
 8000b76:	4638      	mov	r0, r7
 8000b78:	47c0      	blx	r8
 8000b7a:	3001      	adds	r0, #1
 8000b7c:	d0e6      	beq.n	8000b4c <_printf_common+0xa4>
 8000b7e:	3601      	adds	r6, #1
 8000b80:	e7d9      	b.n	8000b36 <_printf_common+0x8e>
	...

08000b84 <_printf_i>:
 8000b84:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000b88:	460c      	mov	r4, r1
 8000b8a:	4691      	mov	r9, r2
 8000b8c:	7e27      	ldrb	r7, [r4, #24]
 8000b8e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000b90:	2f78      	cmp	r7, #120	; 0x78
 8000b92:	4680      	mov	r8, r0
 8000b94:	469a      	mov	sl, r3
 8000b96:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000b9a:	d807      	bhi.n	8000bac <_printf_i+0x28>
 8000b9c:	2f62      	cmp	r7, #98	; 0x62
 8000b9e:	d80a      	bhi.n	8000bb6 <_printf_i+0x32>
 8000ba0:	2f00      	cmp	r7, #0
 8000ba2:	f000 80d8 	beq.w	8000d56 <_printf_i+0x1d2>
 8000ba6:	2f58      	cmp	r7, #88	; 0x58
 8000ba8:	f000 80a3 	beq.w	8000cf2 <_printf_i+0x16e>
 8000bac:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000bb0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000bb4:	e03a      	b.n	8000c2c <_printf_i+0xa8>
 8000bb6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000bba:	2b15      	cmp	r3, #21
 8000bbc:	d8f6      	bhi.n	8000bac <_printf_i+0x28>
 8000bbe:	a001      	add	r0, pc, #4	; (adr r0, 8000bc4 <_printf_i+0x40>)
 8000bc0:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000bc4:	08000c1d 	.word	0x08000c1d
 8000bc8:	08000c31 	.word	0x08000c31
 8000bcc:	08000bad 	.word	0x08000bad
 8000bd0:	08000bad 	.word	0x08000bad
 8000bd4:	08000bad 	.word	0x08000bad
 8000bd8:	08000bad 	.word	0x08000bad
 8000bdc:	08000c31 	.word	0x08000c31
 8000be0:	08000bad 	.word	0x08000bad
 8000be4:	08000bad 	.word	0x08000bad
 8000be8:	08000bad 	.word	0x08000bad
 8000bec:	08000bad 	.word	0x08000bad
 8000bf0:	08000d3d 	.word	0x08000d3d
 8000bf4:	08000c61 	.word	0x08000c61
 8000bf8:	08000d1f 	.word	0x08000d1f
 8000bfc:	08000bad 	.word	0x08000bad
 8000c00:	08000bad 	.word	0x08000bad
 8000c04:	08000d5f 	.word	0x08000d5f
 8000c08:	08000bad 	.word	0x08000bad
 8000c0c:	08000c61 	.word	0x08000c61
 8000c10:	08000bad 	.word	0x08000bad
 8000c14:	08000bad 	.word	0x08000bad
 8000c18:	08000d27 	.word	0x08000d27
 8000c1c:	680b      	ldr	r3, [r1, #0]
 8000c1e:	1d1a      	adds	r2, r3, #4
 8000c20:	681b      	ldr	r3, [r3, #0]
 8000c22:	600a      	str	r2, [r1, #0]
 8000c24:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000c28:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000c2c:	2301      	movs	r3, #1
 8000c2e:	e0a3      	b.n	8000d78 <_printf_i+0x1f4>
 8000c30:	6825      	ldr	r5, [r4, #0]
 8000c32:	6808      	ldr	r0, [r1, #0]
 8000c34:	062e      	lsls	r6, r5, #24
 8000c36:	f100 0304 	add.w	r3, r0, #4
 8000c3a:	d50a      	bpl.n	8000c52 <_printf_i+0xce>
 8000c3c:	6805      	ldr	r5, [r0, #0]
 8000c3e:	600b      	str	r3, [r1, #0]
 8000c40:	2d00      	cmp	r5, #0
 8000c42:	da03      	bge.n	8000c4c <_printf_i+0xc8>
 8000c44:	232d      	movs	r3, #45	; 0x2d
 8000c46:	426d      	negs	r5, r5
 8000c48:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000c4c:	485e      	ldr	r0, [pc, #376]	; (8000dc8 <_printf_i+0x244>)
 8000c4e:	230a      	movs	r3, #10
 8000c50:	e019      	b.n	8000c86 <_printf_i+0x102>
 8000c52:	f015 0f40 	tst.w	r5, #64	; 0x40
 8000c56:	6805      	ldr	r5, [r0, #0]
 8000c58:	600b      	str	r3, [r1, #0]
 8000c5a:	bf18      	it	ne
 8000c5c:	b22d      	sxthne	r5, r5
 8000c5e:	e7ef      	b.n	8000c40 <_printf_i+0xbc>
 8000c60:	680b      	ldr	r3, [r1, #0]
 8000c62:	6825      	ldr	r5, [r4, #0]
 8000c64:	1d18      	adds	r0, r3, #4
 8000c66:	6008      	str	r0, [r1, #0]
 8000c68:	0628      	lsls	r0, r5, #24
 8000c6a:	d501      	bpl.n	8000c70 <_printf_i+0xec>
 8000c6c:	681d      	ldr	r5, [r3, #0]
 8000c6e:	e002      	b.n	8000c76 <_printf_i+0xf2>
 8000c70:	0669      	lsls	r1, r5, #25
 8000c72:	d5fb      	bpl.n	8000c6c <_printf_i+0xe8>
 8000c74:	881d      	ldrh	r5, [r3, #0]
 8000c76:	4854      	ldr	r0, [pc, #336]	; (8000dc8 <_printf_i+0x244>)
 8000c78:	2f6f      	cmp	r7, #111	; 0x6f
 8000c7a:	bf0c      	ite	eq
 8000c7c:	2308      	moveq	r3, #8
 8000c7e:	230a      	movne	r3, #10
 8000c80:	2100      	movs	r1, #0
 8000c82:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000c86:	6866      	ldr	r6, [r4, #4]
 8000c88:	60a6      	str	r6, [r4, #8]
 8000c8a:	2e00      	cmp	r6, #0
 8000c8c:	bfa2      	ittt	ge
 8000c8e:	6821      	ldrge	r1, [r4, #0]
 8000c90:	f021 0104 	bicge.w	r1, r1, #4
 8000c94:	6021      	strge	r1, [r4, #0]
 8000c96:	b90d      	cbnz	r5, 8000c9c <_printf_i+0x118>
 8000c98:	2e00      	cmp	r6, #0
 8000c9a:	d04d      	beq.n	8000d38 <_printf_i+0x1b4>
 8000c9c:	4616      	mov	r6, r2
 8000c9e:	fbb5 f1f3 	udiv	r1, r5, r3
 8000ca2:	fb03 5711 	mls	r7, r3, r1, r5
 8000ca6:	5dc7      	ldrb	r7, [r0, r7]
 8000ca8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000cac:	462f      	mov	r7, r5
 8000cae:	42bb      	cmp	r3, r7
 8000cb0:	460d      	mov	r5, r1
 8000cb2:	d9f4      	bls.n	8000c9e <_printf_i+0x11a>
 8000cb4:	2b08      	cmp	r3, #8
 8000cb6:	d10b      	bne.n	8000cd0 <_printf_i+0x14c>
 8000cb8:	6823      	ldr	r3, [r4, #0]
 8000cba:	07df      	lsls	r7, r3, #31
 8000cbc:	d508      	bpl.n	8000cd0 <_printf_i+0x14c>
 8000cbe:	6923      	ldr	r3, [r4, #16]
 8000cc0:	6861      	ldr	r1, [r4, #4]
 8000cc2:	4299      	cmp	r1, r3
 8000cc4:	bfde      	ittt	le
 8000cc6:	2330      	movle	r3, #48	; 0x30
 8000cc8:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000ccc:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000cd0:	1b92      	subs	r2, r2, r6
 8000cd2:	6122      	str	r2, [r4, #16]
 8000cd4:	f8cd a000 	str.w	sl, [sp]
 8000cd8:	464b      	mov	r3, r9
 8000cda:	aa03      	add	r2, sp, #12
 8000cdc:	4621      	mov	r1, r4
 8000cde:	4640      	mov	r0, r8
 8000ce0:	f7ff fee2 	bl	8000aa8 <_printf_common>
 8000ce4:	3001      	adds	r0, #1
 8000ce6:	d14c      	bne.n	8000d82 <_printf_i+0x1fe>
 8000ce8:	f04f 30ff 	mov.w	r0, #4294967295
 8000cec:	b004      	add	sp, #16
 8000cee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cf2:	4835      	ldr	r0, [pc, #212]	; (8000dc8 <_printf_i+0x244>)
 8000cf4:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000cf8:	6823      	ldr	r3, [r4, #0]
 8000cfa:	680e      	ldr	r6, [r1, #0]
 8000cfc:	061f      	lsls	r7, r3, #24
 8000cfe:	f856 5b04 	ldr.w	r5, [r6], #4
 8000d02:	600e      	str	r6, [r1, #0]
 8000d04:	d514      	bpl.n	8000d30 <_printf_i+0x1ac>
 8000d06:	07d9      	lsls	r1, r3, #31
 8000d08:	bf44      	itt	mi
 8000d0a:	f043 0320 	orrmi.w	r3, r3, #32
 8000d0e:	6023      	strmi	r3, [r4, #0]
 8000d10:	b91d      	cbnz	r5, 8000d1a <_printf_i+0x196>
 8000d12:	6823      	ldr	r3, [r4, #0]
 8000d14:	f023 0320 	bic.w	r3, r3, #32
 8000d18:	6023      	str	r3, [r4, #0]
 8000d1a:	2310      	movs	r3, #16
 8000d1c:	e7b0      	b.n	8000c80 <_printf_i+0xfc>
 8000d1e:	6823      	ldr	r3, [r4, #0]
 8000d20:	f043 0320 	orr.w	r3, r3, #32
 8000d24:	6023      	str	r3, [r4, #0]
 8000d26:	2378      	movs	r3, #120	; 0x78
 8000d28:	4828      	ldr	r0, [pc, #160]	; (8000dcc <_printf_i+0x248>)
 8000d2a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000d2e:	e7e3      	b.n	8000cf8 <_printf_i+0x174>
 8000d30:	065e      	lsls	r6, r3, #25
 8000d32:	bf48      	it	mi
 8000d34:	b2ad      	uxthmi	r5, r5
 8000d36:	e7e6      	b.n	8000d06 <_printf_i+0x182>
 8000d38:	4616      	mov	r6, r2
 8000d3a:	e7bb      	b.n	8000cb4 <_printf_i+0x130>
 8000d3c:	680b      	ldr	r3, [r1, #0]
 8000d3e:	6826      	ldr	r6, [r4, #0]
 8000d40:	6960      	ldr	r0, [r4, #20]
 8000d42:	1d1d      	adds	r5, r3, #4
 8000d44:	600d      	str	r5, [r1, #0]
 8000d46:	0635      	lsls	r5, r6, #24
 8000d48:	681b      	ldr	r3, [r3, #0]
 8000d4a:	d501      	bpl.n	8000d50 <_printf_i+0x1cc>
 8000d4c:	6018      	str	r0, [r3, #0]
 8000d4e:	e002      	b.n	8000d56 <_printf_i+0x1d2>
 8000d50:	0671      	lsls	r1, r6, #25
 8000d52:	d5fb      	bpl.n	8000d4c <_printf_i+0x1c8>
 8000d54:	8018      	strh	r0, [r3, #0]
 8000d56:	2300      	movs	r3, #0
 8000d58:	6123      	str	r3, [r4, #16]
 8000d5a:	4616      	mov	r6, r2
 8000d5c:	e7ba      	b.n	8000cd4 <_printf_i+0x150>
 8000d5e:	680b      	ldr	r3, [r1, #0]
 8000d60:	1d1a      	adds	r2, r3, #4
 8000d62:	600a      	str	r2, [r1, #0]
 8000d64:	681e      	ldr	r6, [r3, #0]
 8000d66:	6862      	ldr	r2, [r4, #4]
 8000d68:	2100      	movs	r1, #0
 8000d6a:	4630      	mov	r0, r6
 8000d6c:	f7ff fa38 	bl	80001e0 <memchr>
 8000d70:	b108      	cbz	r0, 8000d76 <_printf_i+0x1f2>
 8000d72:	1b80      	subs	r0, r0, r6
 8000d74:	6060      	str	r0, [r4, #4]
 8000d76:	6863      	ldr	r3, [r4, #4]
 8000d78:	6123      	str	r3, [r4, #16]
 8000d7a:	2300      	movs	r3, #0
 8000d7c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d80:	e7a8      	b.n	8000cd4 <_printf_i+0x150>
 8000d82:	6923      	ldr	r3, [r4, #16]
 8000d84:	4632      	mov	r2, r6
 8000d86:	4649      	mov	r1, r9
 8000d88:	4640      	mov	r0, r8
 8000d8a:	47d0      	blx	sl
 8000d8c:	3001      	adds	r0, #1
 8000d8e:	d0ab      	beq.n	8000ce8 <_printf_i+0x164>
 8000d90:	6823      	ldr	r3, [r4, #0]
 8000d92:	079b      	lsls	r3, r3, #30
 8000d94:	d413      	bmi.n	8000dbe <_printf_i+0x23a>
 8000d96:	68e0      	ldr	r0, [r4, #12]
 8000d98:	9b03      	ldr	r3, [sp, #12]
 8000d9a:	4298      	cmp	r0, r3
 8000d9c:	bfb8      	it	lt
 8000d9e:	4618      	movlt	r0, r3
 8000da0:	e7a4      	b.n	8000cec <_printf_i+0x168>
 8000da2:	2301      	movs	r3, #1
 8000da4:	4632      	mov	r2, r6
 8000da6:	4649      	mov	r1, r9
 8000da8:	4640      	mov	r0, r8
 8000daa:	47d0      	blx	sl
 8000dac:	3001      	adds	r0, #1
 8000dae:	d09b      	beq.n	8000ce8 <_printf_i+0x164>
 8000db0:	3501      	adds	r5, #1
 8000db2:	68e3      	ldr	r3, [r4, #12]
 8000db4:	9903      	ldr	r1, [sp, #12]
 8000db6:	1a5b      	subs	r3, r3, r1
 8000db8:	42ab      	cmp	r3, r5
 8000dba:	dcf2      	bgt.n	8000da2 <_printf_i+0x21e>
 8000dbc:	e7eb      	b.n	8000d96 <_printf_i+0x212>
 8000dbe:	2500      	movs	r5, #0
 8000dc0:	f104 0619 	add.w	r6, r4, #25
 8000dc4:	e7f5      	b.n	8000db2 <_printf_i+0x22e>
 8000dc6:	bf00      	nop
 8000dc8:	08001521 	.word	0x08001521
 8000dcc:	08001532 	.word	0x08001532

08000dd0 <_sbrk_r>:
 8000dd0:	b538      	push	{r3, r4, r5, lr}
 8000dd2:	4d06      	ldr	r5, [pc, #24]	; (8000dec <_sbrk_r+0x1c>)
 8000dd4:	2300      	movs	r3, #0
 8000dd6:	4604      	mov	r4, r0
 8000dd8:	4608      	mov	r0, r1
 8000dda:	602b      	str	r3, [r5, #0]
 8000ddc:	f7ff fb0e 	bl	80003fc <_sbrk>
 8000de0:	1c43      	adds	r3, r0, #1
 8000de2:	d102      	bne.n	8000dea <_sbrk_r+0x1a>
 8000de4:	682b      	ldr	r3, [r5, #0]
 8000de6:	b103      	cbz	r3, 8000dea <_sbrk_r+0x1a>
 8000de8:	6023      	str	r3, [r4, #0]
 8000dea:	bd38      	pop	{r3, r4, r5, pc}
 8000dec:	20000098 	.word	0x20000098

08000df0 <__sread>:
 8000df0:	b510      	push	{r4, lr}
 8000df2:	460c      	mov	r4, r1
 8000df4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000df8:	f000 fab4 	bl	8001364 <_read_r>
 8000dfc:	2800      	cmp	r0, #0
 8000dfe:	bfab      	itete	ge
 8000e00:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000e02:	89a3      	ldrhlt	r3, [r4, #12]
 8000e04:	181b      	addge	r3, r3, r0
 8000e06:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000e0a:	bfac      	ite	ge
 8000e0c:	6563      	strge	r3, [r4, #84]	; 0x54
 8000e0e:	81a3      	strhlt	r3, [r4, #12]
 8000e10:	bd10      	pop	{r4, pc}

08000e12 <__swrite>:
 8000e12:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e16:	461f      	mov	r7, r3
 8000e18:	898b      	ldrh	r3, [r1, #12]
 8000e1a:	05db      	lsls	r3, r3, #23
 8000e1c:	4605      	mov	r5, r0
 8000e1e:	460c      	mov	r4, r1
 8000e20:	4616      	mov	r6, r2
 8000e22:	d505      	bpl.n	8000e30 <__swrite+0x1e>
 8000e24:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e28:	2302      	movs	r3, #2
 8000e2a:	2200      	movs	r2, #0
 8000e2c:	f000 f9c8 	bl	80011c0 <_lseek_r>
 8000e30:	89a3      	ldrh	r3, [r4, #12]
 8000e32:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000e36:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000e3a:	81a3      	strh	r3, [r4, #12]
 8000e3c:	4632      	mov	r2, r6
 8000e3e:	463b      	mov	r3, r7
 8000e40:	4628      	mov	r0, r5
 8000e42:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000e46:	f000 b869 	b.w	8000f1c <_write_r>

08000e4a <__sseek>:
 8000e4a:	b510      	push	{r4, lr}
 8000e4c:	460c      	mov	r4, r1
 8000e4e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e52:	f000 f9b5 	bl	80011c0 <_lseek_r>
 8000e56:	1c43      	adds	r3, r0, #1
 8000e58:	89a3      	ldrh	r3, [r4, #12]
 8000e5a:	bf15      	itete	ne
 8000e5c:	6560      	strne	r0, [r4, #84]	; 0x54
 8000e5e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000e62:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000e66:	81a3      	strheq	r3, [r4, #12]
 8000e68:	bf18      	it	ne
 8000e6a:	81a3      	strhne	r3, [r4, #12]
 8000e6c:	bd10      	pop	{r4, pc}

08000e6e <__sclose>:
 8000e6e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e72:	f000 b8d3 	b.w	800101c <_close_r>
	...

08000e78 <__swbuf_r>:
 8000e78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e7a:	460e      	mov	r6, r1
 8000e7c:	4614      	mov	r4, r2
 8000e7e:	4605      	mov	r5, r0
 8000e80:	b118      	cbz	r0, 8000e8a <__swbuf_r+0x12>
 8000e82:	6983      	ldr	r3, [r0, #24]
 8000e84:	b90b      	cbnz	r3, 8000e8a <__swbuf_r+0x12>
 8000e86:	f7ff fbbb 	bl	8000600 <__sinit>
 8000e8a:	4b21      	ldr	r3, [pc, #132]	; (8000f10 <__swbuf_r+0x98>)
 8000e8c:	429c      	cmp	r4, r3
 8000e8e:	d12b      	bne.n	8000ee8 <__swbuf_r+0x70>
 8000e90:	686c      	ldr	r4, [r5, #4]
 8000e92:	69a3      	ldr	r3, [r4, #24]
 8000e94:	60a3      	str	r3, [r4, #8]
 8000e96:	89a3      	ldrh	r3, [r4, #12]
 8000e98:	071a      	lsls	r2, r3, #28
 8000e9a:	d52f      	bpl.n	8000efc <__swbuf_r+0x84>
 8000e9c:	6923      	ldr	r3, [r4, #16]
 8000e9e:	b36b      	cbz	r3, 8000efc <__swbuf_r+0x84>
 8000ea0:	6923      	ldr	r3, [r4, #16]
 8000ea2:	6820      	ldr	r0, [r4, #0]
 8000ea4:	1ac0      	subs	r0, r0, r3
 8000ea6:	6963      	ldr	r3, [r4, #20]
 8000ea8:	b2f6      	uxtb	r6, r6
 8000eaa:	4283      	cmp	r3, r0
 8000eac:	4637      	mov	r7, r6
 8000eae:	dc04      	bgt.n	8000eba <__swbuf_r+0x42>
 8000eb0:	4621      	mov	r1, r4
 8000eb2:	4628      	mov	r0, r5
 8000eb4:	f000 f948 	bl	8001148 <_fflush_r>
 8000eb8:	bb30      	cbnz	r0, 8000f08 <__swbuf_r+0x90>
 8000eba:	68a3      	ldr	r3, [r4, #8]
 8000ebc:	3b01      	subs	r3, #1
 8000ebe:	60a3      	str	r3, [r4, #8]
 8000ec0:	6823      	ldr	r3, [r4, #0]
 8000ec2:	1c5a      	adds	r2, r3, #1
 8000ec4:	6022      	str	r2, [r4, #0]
 8000ec6:	701e      	strb	r6, [r3, #0]
 8000ec8:	6963      	ldr	r3, [r4, #20]
 8000eca:	3001      	adds	r0, #1
 8000ecc:	4283      	cmp	r3, r0
 8000ece:	d004      	beq.n	8000eda <__swbuf_r+0x62>
 8000ed0:	89a3      	ldrh	r3, [r4, #12]
 8000ed2:	07db      	lsls	r3, r3, #31
 8000ed4:	d506      	bpl.n	8000ee4 <__swbuf_r+0x6c>
 8000ed6:	2e0a      	cmp	r6, #10
 8000ed8:	d104      	bne.n	8000ee4 <__swbuf_r+0x6c>
 8000eda:	4621      	mov	r1, r4
 8000edc:	4628      	mov	r0, r5
 8000ede:	f000 f933 	bl	8001148 <_fflush_r>
 8000ee2:	b988      	cbnz	r0, 8000f08 <__swbuf_r+0x90>
 8000ee4:	4638      	mov	r0, r7
 8000ee6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ee8:	4b0a      	ldr	r3, [pc, #40]	; (8000f14 <__swbuf_r+0x9c>)
 8000eea:	429c      	cmp	r4, r3
 8000eec:	d101      	bne.n	8000ef2 <__swbuf_r+0x7a>
 8000eee:	68ac      	ldr	r4, [r5, #8]
 8000ef0:	e7cf      	b.n	8000e92 <__swbuf_r+0x1a>
 8000ef2:	4b09      	ldr	r3, [pc, #36]	; (8000f18 <__swbuf_r+0xa0>)
 8000ef4:	429c      	cmp	r4, r3
 8000ef6:	bf08      	it	eq
 8000ef8:	68ec      	ldreq	r4, [r5, #12]
 8000efa:	e7ca      	b.n	8000e92 <__swbuf_r+0x1a>
 8000efc:	4621      	mov	r1, r4
 8000efe:	4628      	mov	r0, r5
 8000f00:	f000 f81e 	bl	8000f40 <__swsetup_r>
 8000f04:	2800      	cmp	r0, #0
 8000f06:	d0cb      	beq.n	8000ea0 <__swbuf_r+0x28>
 8000f08:	f04f 37ff 	mov.w	r7, #4294967295
 8000f0c:	e7ea      	b.n	8000ee4 <__swbuf_r+0x6c>
 8000f0e:	bf00      	nop
 8000f10:	080014d0 	.word	0x080014d0
 8000f14:	080014f0 	.word	0x080014f0
 8000f18:	080014b0 	.word	0x080014b0

08000f1c <_write_r>:
 8000f1c:	b538      	push	{r3, r4, r5, lr}
 8000f1e:	4d07      	ldr	r5, [pc, #28]	; (8000f3c <_write_r+0x20>)
 8000f20:	4604      	mov	r4, r0
 8000f22:	4608      	mov	r0, r1
 8000f24:	4611      	mov	r1, r2
 8000f26:	2200      	movs	r2, #0
 8000f28:	602a      	str	r2, [r5, #0]
 8000f2a:	461a      	mov	r2, r3
 8000f2c:	f7ff fa15 	bl	800035a <_write>
 8000f30:	1c43      	adds	r3, r0, #1
 8000f32:	d102      	bne.n	8000f3a <_write_r+0x1e>
 8000f34:	682b      	ldr	r3, [r5, #0]
 8000f36:	b103      	cbz	r3, 8000f3a <_write_r+0x1e>
 8000f38:	6023      	str	r3, [r4, #0]
 8000f3a:	bd38      	pop	{r3, r4, r5, pc}
 8000f3c:	20000098 	.word	0x20000098

08000f40 <__swsetup_r>:
 8000f40:	4b32      	ldr	r3, [pc, #200]	; (800100c <__swsetup_r+0xcc>)
 8000f42:	b570      	push	{r4, r5, r6, lr}
 8000f44:	681d      	ldr	r5, [r3, #0]
 8000f46:	4606      	mov	r6, r0
 8000f48:	460c      	mov	r4, r1
 8000f4a:	b125      	cbz	r5, 8000f56 <__swsetup_r+0x16>
 8000f4c:	69ab      	ldr	r3, [r5, #24]
 8000f4e:	b913      	cbnz	r3, 8000f56 <__swsetup_r+0x16>
 8000f50:	4628      	mov	r0, r5
 8000f52:	f7ff fb55 	bl	8000600 <__sinit>
 8000f56:	4b2e      	ldr	r3, [pc, #184]	; (8001010 <__swsetup_r+0xd0>)
 8000f58:	429c      	cmp	r4, r3
 8000f5a:	d10f      	bne.n	8000f7c <__swsetup_r+0x3c>
 8000f5c:	686c      	ldr	r4, [r5, #4]
 8000f5e:	89a3      	ldrh	r3, [r4, #12]
 8000f60:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000f64:	0719      	lsls	r1, r3, #28
 8000f66:	d42c      	bmi.n	8000fc2 <__swsetup_r+0x82>
 8000f68:	06dd      	lsls	r5, r3, #27
 8000f6a:	d411      	bmi.n	8000f90 <__swsetup_r+0x50>
 8000f6c:	2309      	movs	r3, #9
 8000f6e:	6033      	str	r3, [r6, #0]
 8000f70:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000f74:	81a3      	strh	r3, [r4, #12]
 8000f76:	f04f 30ff 	mov.w	r0, #4294967295
 8000f7a:	e03e      	b.n	8000ffa <__swsetup_r+0xba>
 8000f7c:	4b25      	ldr	r3, [pc, #148]	; (8001014 <__swsetup_r+0xd4>)
 8000f7e:	429c      	cmp	r4, r3
 8000f80:	d101      	bne.n	8000f86 <__swsetup_r+0x46>
 8000f82:	68ac      	ldr	r4, [r5, #8]
 8000f84:	e7eb      	b.n	8000f5e <__swsetup_r+0x1e>
 8000f86:	4b24      	ldr	r3, [pc, #144]	; (8001018 <__swsetup_r+0xd8>)
 8000f88:	429c      	cmp	r4, r3
 8000f8a:	bf08      	it	eq
 8000f8c:	68ec      	ldreq	r4, [r5, #12]
 8000f8e:	e7e6      	b.n	8000f5e <__swsetup_r+0x1e>
 8000f90:	0758      	lsls	r0, r3, #29
 8000f92:	d512      	bpl.n	8000fba <__swsetup_r+0x7a>
 8000f94:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000f96:	b141      	cbz	r1, 8000faa <__swsetup_r+0x6a>
 8000f98:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000f9c:	4299      	cmp	r1, r3
 8000f9e:	d002      	beq.n	8000fa6 <__swsetup_r+0x66>
 8000fa0:	4630      	mov	r0, r6
 8000fa2:	f000 f98f 	bl	80012c4 <_free_r>
 8000fa6:	2300      	movs	r3, #0
 8000fa8:	6363      	str	r3, [r4, #52]	; 0x34
 8000faa:	89a3      	ldrh	r3, [r4, #12]
 8000fac:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000fb0:	81a3      	strh	r3, [r4, #12]
 8000fb2:	2300      	movs	r3, #0
 8000fb4:	6063      	str	r3, [r4, #4]
 8000fb6:	6923      	ldr	r3, [r4, #16]
 8000fb8:	6023      	str	r3, [r4, #0]
 8000fba:	89a3      	ldrh	r3, [r4, #12]
 8000fbc:	f043 0308 	orr.w	r3, r3, #8
 8000fc0:	81a3      	strh	r3, [r4, #12]
 8000fc2:	6923      	ldr	r3, [r4, #16]
 8000fc4:	b94b      	cbnz	r3, 8000fda <__swsetup_r+0x9a>
 8000fc6:	89a3      	ldrh	r3, [r4, #12]
 8000fc8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000fcc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000fd0:	d003      	beq.n	8000fda <__swsetup_r+0x9a>
 8000fd2:	4621      	mov	r1, r4
 8000fd4:	4630      	mov	r0, r6
 8000fd6:	f000 f929 	bl	800122c <__smakebuf_r>
 8000fda:	89a0      	ldrh	r0, [r4, #12]
 8000fdc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000fe0:	f010 0301 	ands.w	r3, r0, #1
 8000fe4:	d00a      	beq.n	8000ffc <__swsetup_r+0xbc>
 8000fe6:	2300      	movs	r3, #0
 8000fe8:	60a3      	str	r3, [r4, #8]
 8000fea:	6963      	ldr	r3, [r4, #20]
 8000fec:	425b      	negs	r3, r3
 8000fee:	61a3      	str	r3, [r4, #24]
 8000ff0:	6923      	ldr	r3, [r4, #16]
 8000ff2:	b943      	cbnz	r3, 8001006 <__swsetup_r+0xc6>
 8000ff4:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000ff8:	d1ba      	bne.n	8000f70 <__swsetup_r+0x30>
 8000ffa:	bd70      	pop	{r4, r5, r6, pc}
 8000ffc:	0781      	lsls	r1, r0, #30
 8000ffe:	bf58      	it	pl
 8001000:	6963      	ldrpl	r3, [r4, #20]
 8001002:	60a3      	str	r3, [r4, #8]
 8001004:	e7f4      	b.n	8000ff0 <__swsetup_r+0xb0>
 8001006:	2000      	movs	r0, #0
 8001008:	e7f7      	b.n	8000ffa <__swsetup_r+0xba>
 800100a:	bf00      	nop
 800100c:	20000000 	.word	0x20000000
 8001010:	080014d0 	.word	0x080014d0
 8001014:	080014f0 	.word	0x080014f0
 8001018:	080014b0 	.word	0x080014b0

0800101c <_close_r>:
 800101c:	b538      	push	{r3, r4, r5, lr}
 800101e:	4d06      	ldr	r5, [pc, #24]	; (8001038 <_close_r+0x1c>)
 8001020:	2300      	movs	r3, #0
 8001022:	4604      	mov	r4, r0
 8001024:	4608      	mov	r0, r1
 8001026:	602b      	str	r3, [r5, #0]
 8001028:	f7ff f9b3 	bl	8000392 <_close>
 800102c:	1c43      	adds	r3, r0, #1
 800102e:	d102      	bne.n	8001036 <_close_r+0x1a>
 8001030:	682b      	ldr	r3, [r5, #0]
 8001032:	b103      	cbz	r3, 8001036 <_close_r+0x1a>
 8001034:	6023      	str	r3, [r4, #0]
 8001036:	bd38      	pop	{r3, r4, r5, pc}
 8001038:	20000098 	.word	0x20000098

0800103c <__sflush_r>:
 800103c:	898a      	ldrh	r2, [r1, #12]
 800103e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001042:	4605      	mov	r5, r0
 8001044:	0710      	lsls	r0, r2, #28
 8001046:	460c      	mov	r4, r1
 8001048:	d458      	bmi.n	80010fc <__sflush_r+0xc0>
 800104a:	684b      	ldr	r3, [r1, #4]
 800104c:	2b00      	cmp	r3, #0
 800104e:	dc05      	bgt.n	800105c <__sflush_r+0x20>
 8001050:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001052:	2b00      	cmp	r3, #0
 8001054:	dc02      	bgt.n	800105c <__sflush_r+0x20>
 8001056:	2000      	movs	r0, #0
 8001058:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800105c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800105e:	2e00      	cmp	r6, #0
 8001060:	d0f9      	beq.n	8001056 <__sflush_r+0x1a>
 8001062:	2300      	movs	r3, #0
 8001064:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001068:	682f      	ldr	r7, [r5, #0]
 800106a:	602b      	str	r3, [r5, #0]
 800106c:	d032      	beq.n	80010d4 <__sflush_r+0x98>
 800106e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001070:	89a3      	ldrh	r3, [r4, #12]
 8001072:	075a      	lsls	r2, r3, #29
 8001074:	d505      	bpl.n	8001082 <__sflush_r+0x46>
 8001076:	6863      	ldr	r3, [r4, #4]
 8001078:	1ac0      	subs	r0, r0, r3
 800107a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800107c:	b10b      	cbz	r3, 8001082 <__sflush_r+0x46>
 800107e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001080:	1ac0      	subs	r0, r0, r3
 8001082:	2300      	movs	r3, #0
 8001084:	4602      	mov	r2, r0
 8001086:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001088:	6a21      	ldr	r1, [r4, #32]
 800108a:	4628      	mov	r0, r5
 800108c:	47b0      	blx	r6
 800108e:	1c43      	adds	r3, r0, #1
 8001090:	89a3      	ldrh	r3, [r4, #12]
 8001092:	d106      	bne.n	80010a2 <__sflush_r+0x66>
 8001094:	6829      	ldr	r1, [r5, #0]
 8001096:	291d      	cmp	r1, #29
 8001098:	d82c      	bhi.n	80010f4 <__sflush_r+0xb8>
 800109a:	4a2a      	ldr	r2, [pc, #168]	; (8001144 <__sflush_r+0x108>)
 800109c:	40ca      	lsrs	r2, r1
 800109e:	07d6      	lsls	r6, r2, #31
 80010a0:	d528      	bpl.n	80010f4 <__sflush_r+0xb8>
 80010a2:	2200      	movs	r2, #0
 80010a4:	6062      	str	r2, [r4, #4]
 80010a6:	04d9      	lsls	r1, r3, #19
 80010a8:	6922      	ldr	r2, [r4, #16]
 80010aa:	6022      	str	r2, [r4, #0]
 80010ac:	d504      	bpl.n	80010b8 <__sflush_r+0x7c>
 80010ae:	1c42      	adds	r2, r0, #1
 80010b0:	d101      	bne.n	80010b6 <__sflush_r+0x7a>
 80010b2:	682b      	ldr	r3, [r5, #0]
 80010b4:	b903      	cbnz	r3, 80010b8 <__sflush_r+0x7c>
 80010b6:	6560      	str	r0, [r4, #84]	; 0x54
 80010b8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80010ba:	602f      	str	r7, [r5, #0]
 80010bc:	2900      	cmp	r1, #0
 80010be:	d0ca      	beq.n	8001056 <__sflush_r+0x1a>
 80010c0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80010c4:	4299      	cmp	r1, r3
 80010c6:	d002      	beq.n	80010ce <__sflush_r+0x92>
 80010c8:	4628      	mov	r0, r5
 80010ca:	f000 f8fb 	bl	80012c4 <_free_r>
 80010ce:	2000      	movs	r0, #0
 80010d0:	6360      	str	r0, [r4, #52]	; 0x34
 80010d2:	e7c1      	b.n	8001058 <__sflush_r+0x1c>
 80010d4:	6a21      	ldr	r1, [r4, #32]
 80010d6:	2301      	movs	r3, #1
 80010d8:	4628      	mov	r0, r5
 80010da:	47b0      	blx	r6
 80010dc:	1c41      	adds	r1, r0, #1
 80010de:	d1c7      	bne.n	8001070 <__sflush_r+0x34>
 80010e0:	682b      	ldr	r3, [r5, #0]
 80010e2:	2b00      	cmp	r3, #0
 80010e4:	d0c4      	beq.n	8001070 <__sflush_r+0x34>
 80010e6:	2b1d      	cmp	r3, #29
 80010e8:	d001      	beq.n	80010ee <__sflush_r+0xb2>
 80010ea:	2b16      	cmp	r3, #22
 80010ec:	d101      	bne.n	80010f2 <__sflush_r+0xb6>
 80010ee:	602f      	str	r7, [r5, #0]
 80010f0:	e7b1      	b.n	8001056 <__sflush_r+0x1a>
 80010f2:	89a3      	ldrh	r3, [r4, #12]
 80010f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80010f8:	81a3      	strh	r3, [r4, #12]
 80010fa:	e7ad      	b.n	8001058 <__sflush_r+0x1c>
 80010fc:	690f      	ldr	r7, [r1, #16]
 80010fe:	2f00      	cmp	r7, #0
 8001100:	d0a9      	beq.n	8001056 <__sflush_r+0x1a>
 8001102:	0793      	lsls	r3, r2, #30
 8001104:	680e      	ldr	r6, [r1, #0]
 8001106:	bf08      	it	eq
 8001108:	694b      	ldreq	r3, [r1, #20]
 800110a:	600f      	str	r7, [r1, #0]
 800110c:	bf18      	it	ne
 800110e:	2300      	movne	r3, #0
 8001110:	eba6 0807 	sub.w	r8, r6, r7
 8001114:	608b      	str	r3, [r1, #8]
 8001116:	f1b8 0f00 	cmp.w	r8, #0
 800111a:	dd9c      	ble.n	8001056 <__sflush_r+0x1a>
 800111c:	6a21      	ldr	r1, [r4, #32]
 800111e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001120:	4643      	mov	r3, r8
 8001122:	463a      	mov	r2, r7
 8001124:	4628      	mov	r0, r5
 8001126:	47b0      	blx	r6
 8001128:	2800      	cmp	r0, #0
 800112a:	dc06      	bgt.n	800113a <__sflush_r+0xfe>
 800112c:	89a3      	ldrh	r3, [r4, #12]
 800112e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001132:	81a3      	strh	r3, [r4, #12]
 8001134:	f04f 30ff 	mov.w	r0, #4294967295
 8001138:	e78e      	b.n	8001058 <__sflush_r+0x1c>
 800113a:	4407      	add	r7, r0
 800113c:	eba8 0800 	sub.w	r8, r8, r0
 8001140:	e7e9      	b.n	8001116 <__sflush_r+0xda>
 8001142:	bf00      	nop
 8001144:	20400001 	.word	0x20400001

08001148 <_fflush_r>:
 8001148:	b538      	push	{r3, r4, r5, lr}
 800114a:	690b      	ldr	r3, [r1, #16]
 800114c:	4605      	mov	r5, r0
 800114e:	460c      	mov	r4, r1
 8001150:	b913      	cbnz	r3, 8001158 <_fflush_r+0x10>
 8001152:	2500      	movs	r5, #0
 8001154:	4628      	mov	r0, r5
 8001156:	bd38      	pop	{r3, r4, r5, pc}
 8001158:	b118      	cbz	r0, 8001162 <_fflush_r+0x1a>
 800115a:	6983      	ldr	r3, [r0, #24]
 800115c:	b90b      	cbnz	r3, 8001162 <_fflush_r+0x1a>
 800115e:	f7ff fa4f 	bl	8000600 <__sinit>
 8001162:	4b14      	ldr	r3, [pc, #80]	; (80011b4 <_fflush_r+0x6c>)
 8001164:	429c      	cmp	r4, r3
 8001166:	d11b      	bne.n	80011a0 <_fflush_r+0x58>
 8001168:	686c      	ldr	r4, [r5, #4]
 800116a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800116e:	2b00      	cmp	r3, #0
 8001170:	d0ef      	beq.n	8001152 <_fflush_r+0xa>
 8001172:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001174:	07d0      	lsls	r0, r2, #31
 8001176:	d404      	bmi.n	8001182 <_fflush_r+0x3a>
 8001178:	0599      	lsls	r1, r3, #22
 800117a:	d402      	bmi.n	8001182 <_fflush_r+0x3a>
 800117c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800117e:	f7ff fadd 	bl	800073c <__retarget_lock_acquire_recursive>
 8001182:	4628      	mov	r0, r5
 8001184:	4621      	mov	r1, r4
 8001186:	f7ff ff59 	bl	800103c <__sflush_r>
 800118a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800118c:	07da      	lsls	r2, r3, #31
 800118e:	4605      	mov	r5, r0
 8001190:	d4e0      	bmi.n	8001154 <_fflush_r+0xc>
 8001192:	89a3      	ldrh	r3, [r4, #12]
 8001194:	059b      	lsls	r3, r3, #22
 8001196:	d4dd      	bmi.n	8001154 <_fflush_r+0xc>
 8001198:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800119a:	f7ff fad0 	bl	800073e <__retarget_lock_release_recursive>
 800119e:	e7d9      	b.n	8001154 <_fflush_r+0xc>
 80011a0:	4b05      	ldr	r3, [pc, #20]	; (80011b8 <_fflush_r+0x70>)
 80011a2:	429c      	cmp	r4, r3
 80011a4:	d101      	bne.n	80011aa <_fflush_r+0x62>
 80011a6:	68ac      	ldr	r4, [r5, #8]
 80011a8:	e7df      	b.n	800116a <_fflush_r+0x22>
 80011aa:	4b04      	ldr	r3, [pc, #16]	; (80011bc <_fflush_r+0x74>)
 80011ac:	429c      	cmp	r4, r3
 80011ae:	bf08      	it	eq
 80011b0:	68ec      	ldreq	r4, [r5, #12]
 80011b2:	e7da      	b.n	800116a <_fflush_r+0x22>
 80011b4:	080014d0 	.word	0x080014d0
 80011b8:	080014f0 	.word	0x080014f0
 80011bc:	080014b0 	.word	0x080014b0

080011c0 <_lseek_r>:
 80011c0:	b538      	push	{r3, r4, r5, lr}
 80011c2:	4d07      	ldr	r5, [pc, #28]	; (80011e0 <_lseek_r+0x20>)
 80011c4:	4604      	mov	r4, r0
 80011c6:	4608      	mov	r0, r1
 80011c8:	4611      	mov	r1, r2
 80011ca:	2200      	movs	r2, #0
 80011cc:	602a      	str	r2, [r5, #0]
 80011ce:	461a      	mov	r2, r3
 80011d0:	f7ff f906 	bl	80003e0 <_lseek>
 80011d4:	1c43      	adds	r3, r0, #1
 80011d6:	d102      	bne.n	80011de <_lseek_r+0x1e>
 80011d8:	682b      	ldr	r3, [r5, #0]
 80011da:	b103      	cbz	r3, 80011de <_lseek_r+0x1e>
 80011dc:	6023      	str	r3, [r4, #0]
 80011de:	bd38      	pop	{r3, r4, r5, pc}
 80011e0:	20000098 	.word	0x20000098

080011e4 <__swhatbuf_r>:
 80011e4:	b570      	push	{r4, r5, r6, lr}
 80011e6:	460e      	mov	r6, r1
 80011e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011ec:	2900      	cmp	r1, #0
 80011ee:	b096      	sub	sp, #88	; 0x58
 80011f0:	4614      	mov	r4, r2
 80011f2:	461d      	mov	r5, r3
 80011f4:	da07      	bge.n	8001206 <__swhatbuf_r+0x22>
 80011f6:	2300      	movs	r3, #0
 80011f8:	602b      	str	r3, [r5, #0]
 80011fa:	89b3      	ldrh	r3, [r6, #12]
 80011fc:	061a      	lsls	r2, r3, #24
 80011fe:	d410      	bmi.n	8001222 <__swhatbuf_r+0x3e>
 8001200:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001204:	e00e      	b.n	8001224 <__swhatbuf_r+0x40>
 8001206:	466a      	mov	r2, sp
 8001208:	f000 f8be 	bl	8001388 <_fstat_r>
 800120c:	2800      	cmp	r0, #0
 800120e:	dbf2      	blt.n	80011f6 <__swhatbuf_r+0x12>
 8001210:	9a01      	ldr	r2, [sp, #4]
 8001212:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001216:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800121a:	425a      	negs	r2, r3
 800121c:	415a      	adcs	r2, r3
 800121e:	602a      	str	r2, [r5, #0]
 8001220:	e7ee      	b.n	8001200 <__swhatbuf_r+0x1c>
 8001222:	2340      	movs	r3, #64	; 0x40
 8001224:	2000      	movs	r0, #0
 8001226:	6023      	str	r3, [r4, #0]
 8001228:	b016      	add	sp, #88	; 0x58
 800122a:	bd70      	pop	{r4, r5, r6, pc}

0800122c <__smakebuf_r>:
 800122c:	898b      	ldrh	r3, [r1, #12]
 800122e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001230:	079d      	lsls	r5, r3, #30
 8001232:	4606      	mov	r6, r0
 8001234:	460c      	mov	r4, r1
 8001236:	d507      	bpl.n	8001248 <__smakebuf_r+0x1c>
 8001238:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800123c:	6023      	str	r3, [r4, #0]
 800123e:	6123      	str	r3, [r4, #16]
 8001240:	2301      	movs	r3, #1
 8001242:	6163      	str	r3, [r4, #20]
 8001244:	b002      	add	sp, #8
 8001246:	bd70      	pop	{r4, r5, r6, pc}
 8001248:	ab01      	add	r3, sp, #4
 800124a:	466a      	mov	r2, sp
 800124c:	f7ff ffca 	bl	80011e4 <__swhatbuf_r>
 8001250:	9900      	ldr	r1, [sp, #0]
 8001252:	4605      	mov	r5, r0
 8001254:	4630      	mov	r0, r6
 8001256:	f7ff fa73 	bl	8000740 <_malloc_r>
 800125a:	b948      	cbnz	r0, 8001270 <__smakebuf_r+0x44>
 800125c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001260:	059a      	lsls	r2, r3, #22
 8001262:	d4ef      	bmi.n	8001244 <__smakebuf_r+0x18>
 8001264:	f023 0303 	bic.w	r3, r3, #3
 8001268:	f043 0302 	orr.w	r3, r3, #2
 800126c:	81a3      	strh	r3, [r4, #12]
 800126e:	e7e3      	b.n	8001238 <__smakebuf_r+0xc>
 8001270:	4b0d      	ldr	r3, [pc, #52]	; (80012a8 <__smakebuf_r+0x7c>)
 8001272:	62b3      	str	r3, [r6, #40]	; 0x28
 8001274:	89a3      	ldrh	r3, [r4, #12]
 8001276:	6020      	str	r0, [r4, #0]
 8001278:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800127c:	81a3      	strh	r3, [r4, #12]
 800127e:	9b00      	ldr	r3, [sp, #0]
 8001280:	6163      	str	r3, [r4, #20]
 8001282:	9b01      	ldr	r3, [sp, #4]
 8001284:	6120      	str	r0, [r4, #16]
 8001286:	b15b      	cbz	r3, 80012a0 <__smakebuf_r+0x74>
 8001288:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800128c:	4630      	mov	r0, r6
 800128e:	f000 f88d 	bl	80013ac <_isatty_r>
 8001292:	b128      	cbz	r0, 80012a0 <__smakebuf_r+0x74>
 8001294:	89a3      	ldrh	r3, [r4, #12]
 8001296:	f023 0303 	bic.w	r3, r3, #3
 800129a:	f043 0301 	orr.w	r3, r3, #1
 800129e:	81a3      	strh	r3, [r4, #12]
 80012a0:	89a0      	ldrh	r0, [r4, #12]
 80012a2:	4305      	orrs	r5, r0
 80012a4:	81a5      	strh	r5, [r4, #12]
 80012a6:	e7cd      	b.n	8001244 <__smakebuf_r+0x18>
 80012a8:	08000599 	.word	0x08000599

080012ac <__malloc_lock>:
 80012ac:	4801      	ldr	r0, [pc, #4]	; (80012b4 <__malloc_lock+0x8>)
 80012ae:	f7ff ba45 	b.w	800073c <__retarget_lock_acquire_recursive>
 80012b2:	bf00      	nop
 80012b4:	20000090 	.word	0x20000090

080012b8 <__malloc_unlock>:
 80012b8:	4801      	ldr	r0, [pc, #4]	; (80012c0 <__malloc_unlock+0x8>)
 80012ba:	f7ff ba40 	b.w	800073e <__retarget_lock_release_recursive>
 80012be:	bf00      	nop
 80012c0:	20000090 	.word	0x20000090

080012c4 <_free_r>:
 80012c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80012c6:	2900      	cmp	r1, #0
 80012c8:	d048      	beq.n	800135c <_free_r+0x98>
 80012ca:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80012ce:	9001      	str	r0, [sp, #4]
 80012d0:	2b00      	cmp	r3, #0
 80012d2:	f1a1 0404 	sub.w	r4, r1, #4
 80012d6:	bfb8      	it	lt
 80012d8:	18e4      	addlt	r4, r4, r3
 80012da:	f7ff ffe7 	bl	80012ac <__malloc_lock>
 80012de:	4a20      	ldr	r2, [pc, #128]	; (8001360 <_free_r+0x9c>)
 80012e0:	9801      	ldr	r0, [sp, #4]
 80012e2:	6813      	ldr	r3, [r2, #0]
 80012e4:	4615      	mov	r5, r2
 80012e6:	b933      	cbnz	r3, 80012f6 <_free_r+0x32>
 80012e8:	6063      	str	r3, [r4, #4]
 80012ea:	6014      	str	r4, [r2, #0]
 80012ec:	b003      	add	sp, #12
 80012ee:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80012f2:	f7ff bfe1 	b.w	80012b8 <__malloc_unlock>
 80012f6:	42a3      	cmp	r3, r4
 80012f8:	d90b      	bls.n	8001312 <_free_r+0x4e>
 80012fa:	6821      	ldr	r1, [r4, #0]
 80012fc:	1862      	adds	r2, r4, r1
 80012fe:	4293      	cmp	r3, r2
 8001300:	bf04      	itt	eq
 8001302:	681a      	ldreq	r2, [r3, #0]
 8001304:	685b      	ldreq	r3, [r3, #4]
 8001306:	6063      	str	r3, [r4, #4]
 8001308:	bf04      	itt	eq
 800130a:	1852      	addeq	r2, r2, r1
 800130c:	6022      	streq	r2, [r4, #0]
 800130e:	602c      	str	r4, [r5, #0]
 8001310:	e7ec      	b.n	80012ec <_free_r+0x28>
 8001312:	461a      	mov	r2, r3
 8001314:	685b      	ldr	r3, [r3, #4]
 8001316:	b10b      	cbz	r3, 800131c <_free_r+0x58>
 8001318:	42a3      	cmp	r3, r4
 800131a:	d9fa      	bls.n	8001312 <_free_r+0x4e>
 800131c:	6811      	ldr	r1, [r2, #0]
 800131e:	1855      	adds	r5, r2, r1
 8001320:	42a5      	cmp	r5, r4
 8001322:	d10b      	bne.n	800133c <_free_r+0x78>
 8001324:	6824      	ldr	r4, [r4, #0]
 8001326:	4421      	add	r1, r4
 8001328:	1854      	adds	r4, r2, r1
 800132a:	42a3      	cmp	r3, r4
 800132c:	6011      	str	r1, [r2, #0]
 800132e:	d1dd      	bne.n	80012ec <_free_r+0x28>
 8001330:	681c      	ldr	r4, [r3, #0]
 8001332:	685b      	ldr	r3, [r3, #4]
 8001334:	6053      	str	r3, [r2, #4]
 8001336:	4421      	add	r1, r4
 8001338:	6011      	str	r1, [r2, #0]
 800133a:	e7d7      	b.n	80012ec <_free_r+0x28>
 800133c:	d902      	bls.n	8001344 <_free_r+0x80>
 800133e:	230c      	movs	r3, #12
 8001340:	6003      	str	r3, [r0, #0]
 8001342:	e7d3      	b.n	80012ec <_free_r+0x28>
 8001344:	6825      	ldr	r5, [r4, #0]
 8001346:	1961      	adds	r1, r4, r5
 8001348:	428b      	cmp	r3, r1
 800134a:	bf04      	itt	eq
 800134c:	6819      	ldreq	r1, [r3, #0]
 800134e:	685b      	ldreq	r3, [r3, #4]
 8001350:	6063      	str	r3, [r4, #4]
 8001352:	bf04      	itt	eq
 8001354:	1949      	addeq	r1, r1, r5
 8001356:	6021      	streq	r1, [r4, #0]
 8001358:	6054      	str	r4, [r2, #4]
 800135a:	e7c7      	b.n	80012ec <_free_r+0x28>
 800135c:	b003      	add	sp, #12
 800135e:	bd30      	pop	{r4, r5, pc}
 8001360:	20000084 	.word	0x20000084

08001364 <_read_r>:
 8001364:	b538      	push	{r3, r4, r5, lr}
 8001366:	4d07      	ldr	r5, [pc, #28]	; (8001384 <_read_r+0x20>)
 8001368:	4604      	mov	r4, r0
 800136a:	4608      	mov	r0, r1
 800136c:	4611      	mov	r1, r2
 800136e:	2200      	movs	r2, #0
 8001370:	602a      	str	r2, [r5, #0]
 8001372:	461a      	mov	r2, r3
 8001374:	f7fe ffd4 	bl	8000320 <_read>
 8001378:	1c43      	adds	r3, r0, #1
 800137a:	d102      	bne.n	8001382 <_read_r+0x1e>
 800137c:	682b      	ldr	r3, [r5, #0]
 800137e:	b103      	cbz	r3, 8001382 <_read_r+0x1e>
 8001380:	6023      	str	r3, [r4, #0]
 8001382:	bd38      	pop	{r3, r4, r5, pc}
 8001384:	20000098 	.word	0x20000098

08001388 <_fstat_r>:
 8001388:	b538      	push	{r3, r4, r5, lr}
 800138a:	4d07      	ldr	r5, [pc, #28]	; (80013a8 <_fstat_r+0x20>)
 800138c:	2300      	movs	r3, #0
 800138e:	4604      	mov	r4, r0
 8001390:	4608      	mov	r0, r1
 8001392:	4611      	mov	r1, r2
 8001394:	602b      	str	r3, [r5, #0]
 8001396:	f7ff f808 	bl	80003aa <_fstat>
 800139a:	1c43      	adds	r3, r0, #1
 800139c:	d102      	bne.n	80013a4 <_fstat_r+0x1c>
 800139e:	682b      	ldr	r3, [r5, #0]
 80013a0:	b103      	cbz	r3, 80013a4 <_fstat_r+0x1c>
 80013a2:	6023      	str	r3, [r4, #0]
 80013a4:	bd38      	pop	{r3, r4, r5, pc}
 80013a6:	bf00      	nop
 80013a8:	20000098 	.word	0x20000098

080013ac <_isatty_r>:
 80013ac:	b538      	push	{r3, r4, r5, lr}
 80013ae:	4d06      	ldr	r5, [pc, #24]	; (80013c8 <_isatty_r+0x1c>)
 80013b0:	2300      	movs	r3, #0
 80013b2:	4604      	mov	r4, r0
 80013b4:	4608      	mov	r0, r1
 80013b6:	602b      	str	r3, [r5, #0]
 80013b8:	f7ff f807 	bl	80003ca <_isatty>
 80013bc:	1c43      	adds	r3, r0, #1
 80013be:	d102      	bne.n	80013c6 <_isatty_r+0x1a>
 80013c0:	682b      	ldr	r3, [r5, #0]
 80013c2:	b103      	cbz	r3, 80013c6 <_isatty_r+0x1a>
 80013c4:	6023      	str	r3, [r4, #0]
 80013c6:	bd38      	pop	{r3, r4, r5, pc}
 80013c8:	20000098 	.word	0x20000098

080013cc <_init>:
 80013cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013ce:	bf00      	nop
 80013d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013d2:	bc08      	pop	{r3}
 80013d4:	469e      	mov	lr, r3
 80013d6:	4770      	bx	lr

080013d8 <_fini>:
 80013d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013da:	bf00      	nop
 80013dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013de:	bc08      	pop	{r3}
 80013e0:	469e      	mov	lr, r3
 80013e2:	4770      	bx	lr
